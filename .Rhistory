palette = "Set2")
}
plot_barstats_region(metric = "travel_with", minvisitors = 30, testtype = "np", conf = 0.95)
plot_barstats_region(metric = "purpose", minvisitors = 30, testtype = "np", conf = 0.95)
plot_barstats_region(metric = "package_insurance", minvisitors = 30, testtype = "np", conf = 0.95)
plot_barstats_region(metric = "first_trip_tz", minvisitors = 30, testtype = "np", conf = 0.95)
touristdata_clean_country_sorted <- touristdata_clean_country %>%
filter(total_cost > 0,
total_tourist >= 60) %>%
arrange(desc(cost_per_pax_night))
top8 <- touristdata_clean_country_sorted$country[1:8]
touristdata_clean_country_sorted
plot_ANOVA_country <- function(metric = "cost_per_pax_night", selected_countries, testtype = "np", pair = "ns", compare = T, conf = 0.95, nooutliers = T) {
metric_text = case_when(metric == "total_female" ~ "Number of Female Visitors",
metric == "total_male" ~ "Number of Male Visitors",
metric == "total_tourist" ~ "Number of Visitors",
metric == "total_cost" ~ "Total Spending (TZS)",
metric == "cost_per_pax" ~ "Individual Spending (TZS)",
metric == "cost_per_night" ~ "Spending per Night (TZS)",
metric == "cost_per_pax_night" ~ "Individual Spending per Night (TZS)",
metric == "prop_night_spent_mainland" ~ "Proportion of Night spent in Mainland Tanzania",
TRUE ~ metric)
paratext <- case_when(testtype == "p" ~ "Mean (Parametric)",
testtype == "np" ~ "Median (Non-Parametric)",
testtype == "r" ~ "Mean (Robust t-test)",
testtype == "bayes" ~ "Mean (Bayesian)",
)
touristdata_ANOVA <- touristdata_clean %>%
filter(country %in% selected_countries) %>%
mutate(country = fct_reorder(country, !!sym(metric), median, .desc = TRUE)) %>%
drop_na()
if(nooutliers == T){
touristdata_ANOVA <- touristdata_ANOVA %>%
treat_outliers()
}
touristdata_ANOVA %>%
ggbetweenstats(x = country, y = !!sym(metric),
xlab = "Country", ylab = metric_text,
type = testtype, pairwise.comparisons = compare, pairwise.display = pair,
mean.ci = T, p.adjust.method = "fdr",  conf.level = conf,
title = paste0("Comparison of ",paratext," ",metric_text, " across Countries"),
package = "ggthemes", palette = "Tableau_10")
}
plot_ANOVA_country(metric = "cost_per_pax_night", selected_countries = top8, testtype = "np", pair = "ns", compare = F, conf = 0.95, nooutliers = T)
plot_ANOVA_country(metric = "prop_night_spent_mainland", selected_countries = top8, testtype = "np", pair = "ns", conf = 0.95)
plot_barstats_country <- function(metric = "purpose", selected_countries, testtype = "np",conf = 0.95) {
metric_text = case_when(metric == "age_group" ~ "Age Group",
metric == "travel_with" ~ "Travelling Companion",
metric == "purpose" ~ "Purpose",
metric == "main_activity" ~ "Main Activity",
metric == "info_source" ~ "Source of Information",
metric == "tour_arrangement" ~ "Tour Arrangement",
metric == "package_transport_int" ~ "Include International Transportation?",
metric == "package_accomodation" ~ "Include accomodation service?",
metric == "package_food" ~ "Include food service?",
metric == "package_transport_tz" ~ "Include domestic transport service?",
metric == "package_sightseeing" ~ "Include sightseeing service?",
metric == "package_guided_tour" ~ "Include guided tour?",
metric == "package_insurance" ~ "Insurance Included?",
metric == "payment_mode" ~ "Mode of Payment",
metric == "first_trip_tz" ~ "First trip to Tanzania?",
metric == "most_impressing" ~ "Most impressive about Tanzania?",
TRUE ~ metric)
touristdata_barstats <- touristdata_clean %>%
filter(country %in% selected_countries) %>%
drop_na()
touristdata_barstats %>%
ggbarstats(x = !!sym(metric), y = country,
xlab = "Country", legend.title = metric_text,
type = testtype, conf.level = conf,
palette = "Set2")
}
plot_barstats_country(metric = "travel_with", selected_countries = top8, testtype = "np", conf = 0.95)
plot_barstats_country(metric = "purpose", selected_countries = top8, testtype = "np", conf = 0.95)
plot_barstats_country(metric = "package_insurance", selected_countries = top8, testtype = "np", conf = 0.95)
plot_barstats_country(metric = "first_trip_tz", selected_countries = top8, testtype = "np", conf = 0.95)
plot_scatter <- function(xaxis = "prop_night_spent_mainland", yaxis = "cost_per_pax_night", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), max_xaxis, testtype = "np", conf = 0.95, nooutliers = T) {
xaxis_text = case_when(xaxis == "total_female" ~ "Number of Female Visitors",
xaxis == "total_male" ~ "Number of Male Visitors",
xaxis == "total_tourist" ~ "Number of Visitors",
xaxis == "prop_night_spent_mainland" ~ "Proportion of Night spent in Mainland Tanzania",
xaxis == "total_night_spent" ~ "Total Night Spent",
TRUE ~ xaxis)
yaxis_text = case_when(yaxis == "total_cost" ~ "Total Spending (TZS)",
yaxis == "cost_per_pax" ~ "Individual Spending (TZS)",
yaxis == "cost_per_night" ~ "Spending per Night (TZS)",
yaxis == "cost_per_pax_night" ~ "Individual Spending per Night (TZS)",
TRUE ~ yaxis)
if(nooutliers == T){
touristdata_clean <- touristdata_clean %>%
treat_outliers()
}
touristdata_clean %>%
filter(region %in% regionlist,
!!sym(xaxis) <= max_xaxis) %>%
ggscatterstats(x = !!sym(xaxis), y = !!sym(yaxis),
type = testtype, conf.level = conf) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(x = xaxis_text, y = yaxis_text)
}
plot_scatter(xaxis = "total_tourist", yaxis = "total_cost", regionlist = c("Europe","Americas","Oceania"), max_xaxis = 100, testtype = "np", conf = 0.95, nooutliers = T)
plot_ANOVA <- function(xaxis = "age_group", yaxis = "total_cost", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), testtype = "np", pair = "ns",conf = 0.95, nooutliers = T) {
xaxis_text = case_when(xaxis == "age_group" ~ "Age Group",
xaxis == "travel_with" ~ "Travelling Companion",
xaxis == "purpose" ~ "Purpose",
xaxis == "main_activity" ~ "Main Activity",
xaxis == "info_source" ~ "Source of Information",
xaxis == "tour_arrangement" ~ "Tour Arrangement",
xaxis == "package_transport_int" ~ "Include International Transportation?",
xaxis == "package_accomodation" ~ "Include accomodation service?",
xaxis == "package_food" ~ "Include food service?",
xaxis == "package_transport_tz" ~ "Include domestic transport service?",
xaxis == "package_sightseeing" ~ "Include sightseeing service?",
xaxis == "package_guided_tour" ~ "Include guided tour?",
xaxis == "package_insurance" ~ "Insurance Included?",
xaxis == "payment_mode" ~ "Mode of Payment",
xaxis == "first_trip_tz" ~ "First trip to Tanzania?",
xaxis == "most_impressing" ~ "Most impressive about Tanzania?",
TRUE ~ xaxis)
yaxis_text = case_when(yaxis == "total_cost" ~ "Total Spending (TZS)",
yaxis == "cost_per_pax" ~ "Individual Spending (TZS)",
yaxis == "cost_per_night" ~ "Spending per Night (TZS)",
yaxis == "cost_per_pax_night" ~ "Individual Spending per Night (TZS)",
TRUE ~ yaxis)
touristdata_ANOVA <- touristdata_clean %>%
filter(region %in% regionlist) %>%
drop_na()
if(nooutliers == T){
touristdata_ANOVA <- touristdata_ANOVA %>%
treat_outliers()
}
touristdata_ANOVA %>%
ggbetweenstats(x = !!sym(xaxis), y = !!sym(yaxis),
xlab = xaxis_text, ylab = yaxis_text,
type = testtype, pairwise.comparisons = T, pairwise.display = pair,
mean.ci = T, p.adjust.method = "fdr",  conf.level = conf,
package = "ggthemes", palette = "Tableau_10")
}
plot_ANOVA(xaxis = "travel_with", yaxis = "total_cost", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), testtype = "np", pair = "ns",conf = 0.95, nooutliers = T)
plot_ANOVA(xaxis = "age_group", yaxis = "total_cost", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), testtype = "np", pair = "ns",conf = 0.95)
plot_ANOVA(xaxis = "purpose", yaxis = "total_cost", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), testtype = "np", pair = "ns",conf = 0.95)
plot_barstats <- function(xaxis = "age_group", yaxis = "purpose", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), testtype = "np",conf = 0.95) {
xaxis_text = case_when(xaxis == "age_group" ~ "Age Group",
xaxis == "travel_with" ~ "Travelling Companion",
xaxis == "purpose" ~ "Purpose",
xaxis == "main_activity" ~ "Main Activity",
xaxis == "info_source" ~ "Source of Information",
xaxis == "tour_arrangement" ~ "Tour Arrangement",
xaxis == "package_transport_int" ~ "Include International Transportation?",
xaxis == "package_accomodation" ~ "Include accomodation service?",
xaxis == "package_food" ~ "Include food service?",
xaxis == "package_transport_tz" ~ "Include domestic transport service?",
xaxis == "package_sightseeing" ~ "Include sightseeing service?",
xaxis == "package_guided_tour" ~ "Include guided tour?",
xaxis == "package_insurance" ~ "Insurance Included?",
xaxis == "payment_mode" ~ "Mode of Payment",
xaxis == "first_trip_tz" ~ "First trip to Tanzania?",
xaxis == "most_impressing" ~ "Most impressive about Tanzania?",
TRUE ~ xaxis)
yaxis_text = case_when(yaxis == "age_group" ~ "Age Group",
yaxis == "travel_with" ~ "Travelling Companion",
yaxis == "purpose" ~ "Purpose",
yaxis == "main_activity" ~ "Main Activity",
yaxis == "info_source" ~ "Source of Information",
yaxis == "tour_arrangement" ~ "Tour Arrangement",
yaxis == "package_transport_int" ~ "Include International Transportation?",
yaxis == "package_accomodation" ~ "Include accomodation service?",
yaxis == "package_food" ~ "Include food service?",
yaxis == "package_transport_tz" ~ "Include domestic transport service?",
yaxis == "package_sightseeing" ~ "Include sightseeing service?",
yaxis == "package_guided_tour" ~ "Include guided tour?",
yaxis == "package_insurance" ~ "Insurance Included?",
yaxis == "payment_mode" ~ "Mode of Payment",
yaxis == "first_trip_tz" ~ "First trip to Tanzania?",
yaxis == "most_impressing" ~ "Most impressive about Tanzania?",
TRUE ~ yaxis)
touristdata_barstats <- touristdata_clean %>%
filter(region %in% regionlist) %>%
drop_na()
touristdata_barstats %>%
ggbarstats(x = !!sym(yaxis), y = !!sym(xaxis),
xlab = xaxis_text, legend.title = yaxis_text,
type = testtype, conf.level = conf,
palette = "Set2")
}
plot_barstats(xaxis = "age_group", yaxis = "purpose", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), testtype = "np",conf = 0.95)
plot_barstats(xaxis = "main_activity", yaxis = "tour_arrangement", regionlist = c("Asia", "Africa", "Europe", "Oceania", "Americas"), testtype = "np",conf = 0.95)
shiny::runApp('ShinyDashboard')
pacman::p_load("ggstatsplot", "plotly", "DT", "scales","tidyverse")
touristdata_clean <- read_csv("data/touristdata_clean.csv")
touristdata_clean <- touristdata_clean %>%
filter(total_cost > 0,
total_tourist > 0,
total_night_spent > 0) %>%
mutate(cost_per_pax = round(total_cost/total_tourist,0),
cost_per_night = round(total_cost/total_night_spent,0),
cost_per_pax_night = round(total_cost/total_tourist/total_night_spent,0))
plotcorrelation_costppvtn <-
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic")
plotcorrelation_costppvtn <-
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic")
detach("package:ggplot2", unload = TRUE)
detach("package:plotly", unload = TRUE)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
plotcorrelation_costppvtn <-
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic")
pacman::p_load("ggstatsplot", "plotly", "DT", "scales","tidyverse")
plotcorrelation_costppvtn <-
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic")
plotcorrelation_costppvtn <-
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic")
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic")
View(touristdata_clean)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
ggscatterstats(data = touristdata_clean,
x = total_night_spent, y = cost_per_pax,
type = "nonparametic") + facet_wrap(~tour_arrangement)
cost_per_pax
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
options(scipen = 999)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~a)
options(scipen = 999)
plotcorrelation_costppvtn <- function (a) {
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~a)
}
plotcorrelation_costppvtn ("tour_arrangement")
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
plotcorrelation_costppvtn <- function (a) {
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~a)
}
plotcorrelation_costppvtn ("tour_arrangement")
~main_activity)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~main_activity)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~info_source)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~travel_with)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~a as a)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~{{a}})
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~{a})
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~{{a})
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~{{a}})
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~{a})
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~'a')
plotcorrelation_costppvtn <- function ('a') {
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~(a))
plotcorrelation_costppvtn ("tour_arrangement")
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~age_group)
shiny::runApp('ShinyDashboard')
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~{a})
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax_night, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~ !!sym(a))
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrapvars({{a}})
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(vars({{a}}))
plotcorrelation_costppvtn ("tour_arrangement")
plotcorrelation_costppvtn <- function ( !!sym(a)) {
plotcorrelation_costppvtn <- function (!!sym(a)) {
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~!!sym(a))
plotcorrelation_costppvtn (tour_arrangement)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(vars({{a}}))
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~!!sym(a))
plotcorrelation_costppvtn ("tour_arrangement")
plotcorrelation_costppvtn ("tour_arrangement")
plotcorrelation_costppvtn <- function (a) {
ggplot(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent) +geom_bar() + facet_wrap(vars(~!!sym(a))
}
}
aes(x = cost_per_pax, y = total_night_spent) +geom_bar() + facet_wrap(~tour_arrangement)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(vars(~!!sym(a)))
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(vars(!!sym(a)))
pacman::p_load("ggstatsplot", "plotly", "DT", "scales","tidyverse")
touristdata_clean <- read_csv("data/touristdata_clean.csv")
touristdata_clean <- touristdata_clean %>%
filter(total_cost > 0,
total_tourist > 0,
total_night_spent > 0) %>%
mutate(cost_per_pax = round(total_cost/total_tourist,0),
cost_per_night = round(total_cost/total_night_spent,0),
cost_per_pax_night = round(total_cost/total_tourist/total_night_spent,0))
options(scipen = 999)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~main_activity)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~travel_with)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~age_group)
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(~tour_arrangement)
plotcorrelation_costppvtn <- function (a) {
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(vars(!!sym(a)))
}
plotcorrelation_costppvtn ("tour_arrangement")
plotcorrelation_costppvtn ("travel_with")
plotcorrelation_costppvtn ("purpose")
plotcorrelation_costppvtn ("info_source")
plotcorrelation_costppvtn ("info_source")
shiny::runApp('ShinyDashboard')
pacman::p_load("ggstatsplot", "plotly", "DT", "scales","tidyverse")
touristdata_clean <- read_csv("data/touristdata_clean.csv")
touristdata_clean <- touristdata_clean %>%
filter(total_cost > 0,
total_tourist > 0,
total_night_spent > 0) %>%
mutate(cost_per_pax = round(total_cost/total_tourist,0),
cost_per_night = round(total_cost/total_night_spent,0),
cost_per_pax_night = round(total_cost/total_tourist/total_night_spent,0))
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY"),
aes(x = total_cost, y = main_activity)) + geom_boxplot()
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY"),
aes(x = total_cost, y = main_activity)) + geom_boxplot()
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY"),
aes(x = total_cost, y = main_activity)) + geom_boxplot()
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(first_trip_tz),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = ))
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(first_trip_tz),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = ))
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(first_trip_tz),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = first_trip_tz))
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(payment_mode),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = payment_mode))
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(payment_mode),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = payment_mode))
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement))
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement))
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu")
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu")
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="BrBG")
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu")
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="GnBu")
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="BuGm")
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="BuGn")
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu")
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu") + stat_summary(fun.y=mean, geom = "point", colour="yellow")
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu") + stat_summary(fun.y=mean, geom = "point", colour="brown")
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu")
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(y = total_cost, x = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu")
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(y = total_cost, x = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(package_transport_int),
aes(y = total_cost, x = main_activity)) + geom_boxplot(aes(fill = package_transport_int)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(package_transport_int),
aes(y = total_cost, x = age_group)) + geom_boxplot(aes(fill = package_transport_int)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(package_food),
aes(y = total_cost, x = age_group)) + geom_boxplot(aes(fill = package_food)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(info_source),
aes(y = total_cost, x = main_activity)) + geom_boxplot(aes(fill = info_source)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu")
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(x = total_cost, y = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(y = total_cost, x = main_activity)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
options(scipen = 999)
plotcorrelation_costppvtn <- function (a) {
ggscatterstats(data = touristdata_clean,
x = cost_per_pax, y = total_night_spent,
type = "nonparametic") + facet_wrap(vars(!!sym(a)))
}
plotcorrelation_costppvtn ("tour_arrangement")
shiny::runApp('ShinyDashboard')
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(y = total_cost, x = age_group)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
options(scipen = 999)
p1 <- ggplot(data = touristdata_clean %>% filter(country == "GERMANY") %>% group_by(tour_arrangement),
aes(y = total_cost, x = age_group)) + geom_boxplot(aes(fill = tour_arrangement)) + scale_fill_brewer(palette="YlGnBu") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p1
shiny::runApp('ShinyDashboard')
runApp('ShinyDashboard')
runApp('ShinyDashboard')
source("C:/aruiana/VAP/Website/about.html")
shiny::runApp('ShinyDashboard')
runApp('ShinyDashboard')

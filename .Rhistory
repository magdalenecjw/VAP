label <- append(label, j)
}
label_table <- data.frame(matrix(ncol = 1, nrow = 0))
for (i in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- rbind(label_table, j)
}
View(label_table)
label_table <- data.frame(matrix(ncol = 1, nrow = 0))
for (i in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- cbind(label_table, j)
}
label_table <- data.frame(matrix(ncol = 1))
for (i in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- cbind(label_table, j)
}
View(label_table)
label_table <- data.frame()
for (i in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- cbind(label_table, j)
}
label_table <- data.frame(matrix(ncol = 0, nrow = 0))
for (i in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- cbind(label_table, j)
}
label_table <- data.frame(matrix(ncol = 0, nrow = 0))
for (i in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- rbind(label_table, j)
}
View(label_table)
label_table <- data.frame(matrix(ncol = 0, nrow = 0))
for (j in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- rbind(label_table, j)
}
View(label_table)
df_clustering_wo_id <- df_clustering %>%
select(!ID)
label_table <- data.frame(matrix(ncol = 0, nrow = 0))
for (row in 1:length(colnames(df_clustering_wo_id))){
for (j in list(levels(df_clustering_wo_id[[1]]))) {
label_table <- rbind(label_table, j)
}
return(label_table)
}
View(label_table)
df_clustering_wo_id <- df_clustering %>%
select(!ID)
label_table <- data.frame(matrix(ncol = 0, nrow = 0))
for (row in 1:length(colnames(df_clustering_wo_id))){
for (j in list(levels(df_clustering_wo_id[[row]]))) {
label_table <- rbind(label_table, j)
}
return(label_table)
}
View(label_table)
type <- sapply(df_clustering,class)
factors = type[type=="factor"]
type <- sapply(df_clustering,class)
factors = type[type=="factor"]
output <- lapply(names(factors),function(x){
res <- data.frame(VarName=x,
Level=levels(df_clustering[,x]),
Number=1:nlevels(df_clustering[,x]))
return(res)
})
type <- sapply(df_clustering, class)
factors = type[type=="factor"]
output <- lapply(names(factors),function(x){
res <- data.frame(VarName=x,
Level=levels(df_clustering[,x]),
Number=1:nlevels(df_clustering[,x]))
return(res)
})
pacman::p_load(poLCA, ggplot2, plotly, tidyverse)
df <- read_csv("data/touristdata_clean.csv")
df_clustering <- df %>%
select(!code) %>%
select(!country) %>%
mutate(package_transport_int = recode(package_transport_int,
`1` = 2,
`0` = 1)) %>%
mutate(package_accomodation = recode(package_accomodation,
`1` = 2,
`0` = 1)) %>%
mutate(package_food = recode(package_food,
`1` = 2,
`0` = 1)) %>%
mutate(package_transport_tz = recode(package_transport_tz,
`1` = 2,
`0` = 1)) %>%
mutate(package_sightseeing = recode(package_sightseeing,
`1` = 2,
`0` = 1)) %>%
mutate(package_guided_tour = recode(package_guided_tour,
`1` = 2,
`0` = 1)) %>%
mutate(package_insurance = recode(package_insurance,
`1` = 2,
`0` = 1)) %>%
mutate(first_trip_tz = recode(first_trip_tz,
`1` = 2,
`0` = 1)) %>%
mutate(duration = cut(total_night_spent, breaks = c(0, 7, Inf),
labels = c("Within_1_week", "More_than_1_week"))) %>%
mutate(mainland_zanzibar = cut(prop_night_spent_mainland,
breaks = c(0, 0.5, Inf), right = F,
labels = c("zanzibar", "mainland"))) %>%
mutate(travel_with = recode(travel_with,
`Children` = "ImmediateFamily",
`Spouse` = "ImmediateFamily",
`Spouse and Children` = "ImmediateFamily")) %>%
select(!total_female) %>%
select(!total_male) %>%
filter(total_tourist > 0) %>%
mutate(total_tourist = cut(total_tourist,
breaks = c(0,1,2,Inf),
labels = c("1", "2", "3+"))) %>%
filter(purpose != "Other") %>%
mutate(purpose = recode(purpose,
`Business` = "Non-Leisure",
`Leisure and Holidays` = "Leisure",
`Meetings and Conference` = "Non-Leisure",
`Scientific and Academic` = "Non-Leisure",
`Visiting Friends and Relatives` = "Leisure",
`Volunteering` = "Non-Leisure")) %>%
select(!main_activity) %>%
mutate(info_source = recode(info_source,
`Friends, relatives` = "Word-of-Mouth",
`inflight magazines` = "Others",
`Newspaper, magazines,brochures` = "Others",
`others` = "Others",
`Radio, TV, Web` = "Others",
`Tanzania Mission Abroad` = "Others",
`Trade fair` = "Others",
`Travel, agent, tour operator` = "Travel agents")) %>%
select(!night_mainland) %>%
select(!night_zanzibar) %>%
select(!total_night_spent) %>%
select(!prop_night_spent_mainland) %>%
mutate(payment_mode = recode(payment_mode,
`Cash` = "Cash",
`Credit Card` = "Non-Cash",
`Other` = "Non-Cash",
`Travellers Cheque` = "Non-Cash")) %>%
select(!most_impressing) %>%
mutate(total_cost = cut(total_cost,
breaks = c(0, 800000, 3550000, 9950000, Inf),
right = F,
labels = c("800k or less", "800k - 3.55mil",
"3.55mil - 9.95mil",
"More than 9.95mil")))
##ensure all variables are factors
df_clustering[-1] <- lapply(df_clustering[-1], factor)
##ensure no missing values
sapply(df_clustering, function(x) sum(is.na(x)))
set.seed(1234)
f <- as.formula(cbind(region, age_group, travel_with, total_tourist, purpose,
info_source, tour_arrangement, package_transport_int,
package_accomodation, package_food, package_transport_tz,
package_sightseeing, package_guided_tour,
package_insurance, payment_mode, first_trip_tz,
total_cost, duration, mainland_zanzibar)~1)
##latent class analysis specifying 3 classes
##the more classes and variables there are, the longer it takes to run
##can consider limiting the nclass to between 2-7
##limit nrep to between 1 to 5
LCA_model <- poLCA(f, df_clustering, nclass=3, nrep=3, maxiter=5000)
##in box similar to RSME for regression tree
LCA_model$bic
df_clustering$class <- LCA_model$predclass
df_clustering$class <- factor(df_clustering$class)
##plot % of sample falling within each cluster
df_clustering_prop <- df_clustering %>%
group_by(class) %>%
summarise(counts = n()) %>%
mutate(class_pct = counts / sum(counts)) %>%
ungroup()
fig_pct <- ggplot(df_clustering_prop, aes(y = class, x = class_pct)) +
geom_bar(aes(text = paste0("prop: ",round(class_pct, 2)*100,"%")), stat = "identity") +
labs(x = "Percentage of data in class", y = "Class")
ggplotly(fig_pct, tooltip = "text")
##plotting results - change of x only
group_table <- df_clustering %>%
group_by(total_cost, class) %>% ##input x to be charted
summarise(counts = n()) %>%
ungroup()
class_table <- df_clustering %>%
group_by(class) %>%
summarise(sum_count = n()) %>%
ungroup()
plot_table <- left_join(group_table, class_table) %>%
mutate(perc = round(counts*100/sum_count, 1)) %>%
rename(cluster = class) %>%
arrange(desc(total_cost)) %>%
arrange(cluster)
p1 <- ggplot(plot_table, aes(fill = total_cost, x = cluster, y = counts)) +
geom_bar(position = "fill", stat = "identity") + coord_flip()
fig1 <- ggplotly(p1)
fig1
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1,
Factor_level = Var2,
Prop = value,
Category = L2) %>%
mutate(Prop = round(Prop*100,2))
##Plotting OVerall Plot
clust_plot_reactive <- ggplot(df_clustering_prob,
aes(x = Class, y = Prop, group = desc(Factor_level))) +
geom_bar(stat = "identity", position = "stack", aes(fill = Factor_level)) +
facet_wrap(~ Category) +
coord_flip() +
labs(fill = "Factor Level") +
scale_y_continuous("Proportion", expand = c(0, 0)) +
theme_minimal(base_size = 10) +
scale_fill_manual(values = colorset)
type <- sapply(df_clustering, class)
factors = type[type=="factor"]
output <- lapply(names(factors),function(x){
res <- data.frame(VarName=x,
Level=levels(df_clustering[,x]),
Number=1:nlevels(df_clustering[,x]))
return(res)
})
mydata <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
mydata %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
clustering_labels <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
clustering_labels %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
df_clustering_labels <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
clusterlabels <- df_clustering_labels %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
View(clusterlabels)
View(df_clustering_prob)
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
mutate(Factor_level = str_replace_all(Factor_level, "Pr(", "")) %>%
mutate(Factor_level = str_replace_all(Factor_level, ")", ""))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
mutate(Factor_level = str_replace_all(Factor_level, "Pr\(", "")) %>%
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
mutate(Factor_level = str_replace_all(Factor_level, "Pr\\(", "")) %>%
mutate(Factor_level = str_replace_all(Factor_level, "\\)", ""))
df_clustering_labels <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
clusterlabels <- df_clustering_labels %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
mutate(Factor_level = str_replace_all(Factor_level, "Pr\\(", "")) %>%
mutate(Factor_level = str_replace_all(Factor_level, "\\)", ""))
df_clustering_labels <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
clusterlabels <- df_clustering_labels %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
clusterlabels_table <- df_clustering_prob %>%
inner_join(clusterlabels, by = c('Category' = 'VarName', 'Factor_level' = 'Number'))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
mutate(Factor_level = str_replace_all(Factor_level, "Pr\\(", "")) %>%
mutate(Factor_level = str_replace_all(Factor_level, "\\)", "")) %>%
mutate(Factor_level = as.numeric(Factor_level))
df_clustering_labels <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
clusterlabels <- df_clustering_labels %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
clusterlabels_table <- df_clustering_prob %>%
inner_join(clusterlabels, by = c('Category' = 'VarName', 'Factor_level' = 'Number'))
View(clusterlabels_table)
View(df_clustering_prob)
View(df_clustering_prob)
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
cbind(rep(df_clustering_prob[2],1)) %>%
mutate(Factor_level = str_replace_all(Factor_level, "Pr\\(", "")) %>%
mutate(Factor_level = str_replace_all(Factor_level, "\\)", "")) %>%
mutate(Factor_level = as.numeric(Factor_level))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
cbind(rep(df_clustering_prob[2],1))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
cbind(rep(df_clustering_prob[2],1))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
cbind(rep(df_clustering_prob[2],1)) %>%
rename(Level = df_clustering_prob[-1])
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2)) %>%
cbind(rep(df_clustering_prob[2],1)) %>%
rename(Level = df_clustering_prob[5])
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob$Level <- cbind(df_clustering_prob, rep(df_clustering_prob[2],1))
df_clustering_prob2 <- df_clustering_prob %>%
mutate(Factor_level = str_replace_all(Level, "Pr\\(", "")) %>%
mutate(Factor_level = str_replace_all(Level, "\\)", "")) %>%
mutate(Factor_level = as.numeric(Level))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob$Level <- cbind(df_clustering_prob, rep(df_clustering_prob[2],1))
df_clustering_prob2 <- df_clustering_prob %>%
mutate(Level = str_replace_all(Level, "Pr\\(", "")) %>%
mutate(Level = str_replace_all(Level, "\\)", "")) %>%
mutate(Level = as.numeric(Level))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
pacman::p_load(poLCA, ggplot2, plotly, tidyverse)
df <- read_csv("data/touristdata_clean.csv")
df_clustering <- df %>%
select(!code) %>%
select(!country) %>%
mutate(package_transport_int = recode(package_transport_int,
`1` = 2,
`0` = 1)) %>%
mutate(package_accomodation = recode(package_accomodation,
`1` = 2,
`0` = 1)) %>%
mutate(package_food = recode(package_food,
`1` = 2,
`0` = 1)) %>%
mutate(package_transport_tz = recode(package_transport_tz,
`1` = 2,
`0` = 1)) %>%
mutate(package_sightseeing = recode(package_sightseeing,
`1` = 2,
`0` = 1)) %>%
mutate(package_guided_tour = recode(package_guided_tour,
`1` = 2,
`0` = 1)) %>%
mutate(package_insurance = recode(package_insurance,
`1` = 2,
`0` = 1)) %>%
mutate(first_trip_tz = recode(first_trip_tz,
`1` = 2,
`0` = 1)) %>%
mutate(duration = cut(total_night_spent, breaks = c(0, 7, Inf),
labels = c("Within_1_week", "More_than_1_week"))) %>%
mutate(mainland_zanzibar = cut(prop_night_spent_mainland,
breaks = c(0, 0.5, Inf), right = F,
labels = c("zanzibar", "mainland"))) %>%
mutate(travel_with = recode(travel_with,
`Children` = "ImmediateFamily",
`Spouse` = "ImmediateFamily",
`Spouse and Children` = "ImmediateFamily")) %>%
select(!total_female) %>%
select(!total_male) %>%
filter(total_tourist > 0) %>%
mutate(total_tourist = cut(total_tourist,
breaks = c(0,1,2,Inf),
labels = c("1", "2", "3+"))) %>%
filter(purpose != "Other") %>%
mutate(purpose = recode(purpose,
`Business` = "Non-Leisure",
`Leisure and Holidays` = "Leisure",
`Meetings and Conference` = "Non-Leisure",
`Scientific and Academic` = "Non-Leisure",
`Visiting Friends and Relatives` = "Leisure",
`Volunteering` = "Non-Leisure")) %>%
select(!main_activity) %>%
mutate(info_source = recode(info_source,
`Friends, relatives` = "Word-of-Mouth",
`inflight magazines` = "Others",
`Newspaper, magazines,brochures` = "Others",
`others` = "Others",
`Radio, TV, Web` = "Others",
`Tanzania Mission Abroad` = "Others",
`Trade fair` = "Others",
`Travel, agent, tour operator` = "Travel agents")) %>%
select(!night_mainland) %>%
select(!night_zanzibar) %>%
select(!total_night_spent) %>%
select(!prop_night_spent_mainland) %>%
mutate(payment_mode = recode(payment_mode,
`Cash` = "Cash",
`Credit Card` = "Non-Cash",
`Other` = "Non-Cash",
`Travellers Cheque` = "Non-Cash")) %>%
select(!most_impressing) %>%
mutate(total_cost = cut(total_cost,
breaks = c(0, 800000, 3550000, 9950000, Inf),
right = F,
labels = c("800k or less", "800k - 3.55mil",
"3.55mil - 9.95mil",
"More than 9.95mil")))
##ensure all variables are factors
df_clustering[-1] <- lapply(df_clustering[-1], factor)
##ensure no missing values
sapply(df_clustering, function(x) sum(is.na(x)))
set.seed(1234)
f <- as.formula(cbind(region, age_group, travel_with, total_tourist, purpose,
info_source, tour_arrangement, package_transport_int,
package_accomodation, package_food, package_transport_tz,
package_sightseeing, package_guided_tour,
package_insurance, payment_mode, first_trip_tz,
total_cost, duration, mainland_zanzibar)~1)
##latent class analysis specifying 3 classes
##the more classes and variables there are, the longer it takes to run
##can consider limiting the nclass to between 2-7
##limit nrep to between 1 to 5
LCA_model <- poLCA(f, df_clustering, nclass=3, nrep=3, maxiter=5000)
df_clustering$class <- LCA_model$predclass
df_clustering$class <- factor(df_clustering$class)
##plot % of sample falling within each cluster
df_clustering_prop <- df_clustering %>%
group_by(class) %>%
summarise(counts = n()) %>%
mutate(class_pct = counts / sum(counts)) %>%
ungroup()
fig_pct <- ggplot(df_clustering_prop, aes(y = class, x = class_pct)) +
geom_bar(aes(text = paste0("prop: ",round(class_pct, 2)*100,"%")), stat = "identity") +
labs(x = "Percentage of data in class", y = "Class")
ggplotly(fig_pct, tooltip = "text")
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob$Level <- cbind(df_clustering_prob, rep(df_clustering_prob[2],1))
View(df_clustering_prob)
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob <- cbind(df_clustering_prob, rep(df_clustering_prob[2],1))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob$Level = cbind(df_clustering_prob, rep(df_clustering_prob[2],1))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob$Level <- df_clustering_prob$Factor_level
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob$Level <- df_clustering_prob$Factor_level
df_clustering_prob2 <- df_clustering_prob %>%
mutate(Level = str_replace_all(Level, "Pr\\(", "")) %>%
mutate(Level = str_replace_all(Level, "\\)", "")) %>%
mutate(Level = as.numeric(Level))
df_clustering_labels <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
clusterlabels <- df_clustering_labels %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
clusterlabels_table <- df_clustering_prob %>%
inner_join(clusterlabels, by = c('Category' = 'VarName', 'Level' = 'Number'))
df_clustering_prob <- reshape2::melt(LCA_model$probs, level = 2) %>%
rename(Class = Var1, Factor_level = Var2, Prop = value, Category = L2) %>%
mutate(Prop = round(Prop*100,2))
df_clustering_prob$Level <- df_clustering_prob$Factor_level
df_clustering_prob2 <- df_clustering_prob %>%
mutate(Level = str_replace_all(Level, "Pr\\(", "")) %>%
mutate(Level = str_replace_all(Level, "\\)", "")) %>%
mutate(Level = as.numeric(Level))
df_clustering_labels <- df_clustering %>%
mutate(Group = as.factor(sample(letters[1:4], nrow(.), replace = TRUE)))
clusterlabels <- df_clustering_labels %>%
select(where(is.factor)) %>%
purrr::map_dfr(function(f) {
data.frame(Level = levels(f),
Number = seq_along(levels(f)))
}, .id = "VarName")
clusterlabels_table <- df_clustering_prob2 %>%
inner_join(clusterlabels, by = c('Category' = 'VarName', 'Level' = 'Number'))
View(clusterlabels)
View(clusterlabels_table)

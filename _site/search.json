[
  {
    "objectID": "Analysis/Clustering.html",
    "href": "Analysis/Clustering.html",
    "title": "Clustering Analysis",
    "section": "",
    "text": "Load Packages and Data\n\npacman::p_load(poLCA, ggplot2, tidyverse)\n\ndf <- read_csv(\"data/touristdata_clean.csv\")\n\ndf_clustering <- df %>% \n  select(!code) %>% \n  select(!country)\n\n\n\nLatent Class Analysis\n\n##recode dichotomous variables as poLCA expects all variables to start at level 1, hence dichotomous variables should be 1/2 and not 0/1\n##bin continuous variables into categories\n##recode variables with imbalanced classification\n\ndf_clustering_recoded <- df_clustering %>%\n  mutate(package_transport_int = recode(package_transport_int,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(package_accomodation = recode(package_accomodation,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(package_food = recode(package_food,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(package_transport_tz = recode(package_transport_tz,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(package_sightseeing = recode(package_sightseeing,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(package_guided_tour = recode(package_guided_tour,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(package_insurance = recode(package_insurance,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(first_trip_tz = recode(first_trip_tz,\n                                        `1` = 2,\n                                        `0` = 1)) %>%\n  mutate(duration = cut(total_night_spent, breaks = c(0, 7, Inf), \n             labels = c(\"Within_1_week\", \"More_than_1_week\"))) %>%\n  mutate(mainland_zanzibar = cut(prop_night_spent_mainland, \n                                 breaks = c(0, 0.5, Inf), right = F, \n                                 labels = c(\"zanzibar\", \"mainland\"))) %>%\n  mutate(travel_with = recode(travel_with,\n                              `Children` = \"ImmediateFamily\",\n                              `Spouse` = \"ImmediateFamily\",\n                              `Spouse and Children` = \"ImmediateFamily\")) %>%\n  select(!total_female) %>%\n  select(!total_male) %>%\n  filter(total_tourist > 0) %>%\n  mutate(total_tourist = cut(total_tourist,\n                             breaks = c(0,1,2,Inf),\n                             labels = c(\"1\", \"2\", \"3+\"))) %>%\n  filter(purpose != \"Other\") %>%\n  mutate(purpose = recode(purpose,\n                          `Business` = \"Non-Leisure\",\n                          `Leisure and Holidays` = \"Leisure\",\n                          `Meetings and Conference` = \"Non-Leisure\",\n                          `Scientific and Academic` = \"Non-Leisure\",\n                          `Visiting Friends and Relatives` = \"Leisure\",\n                          `Volunteering` = \"Non-Leisure\")) %>%\n  select(!main_activity) %>%\n  mutate(info_source = recode(info_source,\n                          `Friends, relatives` = \"Word-of-Mouth\",\n                          `inflight magazines` = \"Others\",\n                          `Newspaper, magazines,brochures` = \"Others\",\n                          `others` = \"Others\",\n                          `Radio, TV, Web` = \"Others\",\n                          `Tanzania Mission Abroad` = \"Others\",\n                          `Trade fair` = \"Others\",\n                          `Travel, agent, tour operator` = \"Travel agents\")) %>%\n  select(!night_mainland) %>%\n  select(!night_zanzibar) %>%\n  select(!total_night_spent) %>%\n  select(!prop_night_spent_mainland) %>%\n  mutate(payment_mode = recode(payment_mode,\n                               `Cash` = \"Cash\",\n                               `Credit Card` = \"Non-Cash\",\n                               `Other` = \"Non-Cash\",\n                               `Travellers Cheque` = \"Non-Cash\")) %>%\n  select(!most_impressing) %>%\n  mutate(total_cost = cut(total_cost, \n                          breaks = c(0, 800000, 3550000, 9950000, Inf), \n                          right = F, \n                          labels = c(\"800k or less\", \"800k - 3.55mil\", \n                                     \"3.55mil - 9.95mil\", \n                                     \"More than 9.95mil\")))\n\n\n##ensure all variables are factors\ndf_clustering_recoded[-1] <- lapply(df_clustering_recoded[-1], factor)\n\n##ensure no missing values\nsapply(df_clustering_recoded, function(x) sum(is.na(x)))\n\n                   ID                region             age_group \n                    0                     0                     0 \n          travel_with         total_tourist               purpose \n                    0                     0                     0 \n          info_source      tour_arrangement package_transport_int \n                    0                     0                     0 \n package_accomodation          package_food  package_transport_tz \n                    0                     0                     0 \n  package_sightseeing   package_guided_tour     package_insurance \n                    0                     0                     0 \n         payment_mode         first_trip_tz            total_cost \n                    0                     0                     0 \n             duration     mainland_zanzibar \n                    0                     0 \n\n\n\n## select variables\n##Variables in parentheses are the latent class classification variables\n\nf <- as.formula(cbind(region, age_group, travel_with, total_tourist, purpose,\n                      info_source, tour_arrangement, package_transport_int,\n                      package_accomodation, package_food, package_transport_tz,\n                      package_sightseeing, package_guided_tour,\n                      package_insurance, payment_mode, first_trip_tz,\n                      total_cost, duration, mainland_zanzibar)~1)\n\n\n##latent class analysis specifying 3 classes\n##the more classes and variables there are, the longer it takes to run\n\n##can consider limiting the nclass to between 2-7\n##limit nrep to between 1 to 5)\n\nLCA_model <- poLCA(f, df_clustering_recoded, nclass=7, nrep=5, maxiter=5000)\n\nModel 1: llik = -46230.13 ... best llik = -46230.13\nModel 2: llik = -46510.07 ... best llik = -46230.13\nModel 3: llik = -46230.13 ... best llik = -46230.13\nModel 4: llik = -46230.21 ... best llik = -46230.13\nModel 5: llik = -46550.39 ... best llik = -46230.13\nConditional item response (column) probabilities,\n by outcome variable, for each class (row) \n \n$region\n           Pr(1)  Pr(2)  Pr(3)  Pr(4)  Pr(5)\nclass 1:  0.7860 0.0475 0.0832 0.0767 0.0066\nclass 2:  0.0870 0.2050 0.1497 0.5290 0.0294\nclass 3:  0.0664 0.2772 0.1146 0.4343 0.1075\nclass 4:  0.8138 0.0367 0.0781 0.0706 0.0008\nclass 5:  0.0149 0.3200 0.0425 0.5509 0.0716\nclass 6:  0.0871 0.1751 0.0968 0.6096 0.0313\nclass 7:  0.1810 0.0088 0.0397 0.7516 0.0189\n\n$age_group\n           Pr(1)  Pr(2)  Pr(3)  Pr(4)\nclass 1:  0.0525 0.6795 0.2471 0.0209\nclass 2:  0.2884 0.5226 0.1708 0.0181\nclass 3:  0.2433 0.3918 0.2630 0.1018\nclass 4:  0.0751 0.6769 0.2438 0.0043\nclass 5:  0.0438 0.3619 0.4364 0.1578\nclass 6:  0.1617 0.5135 0.2808 0.0440\nclass 7:  0.0842 0.5963 0.2977 0.0219\n\n$travel_with\n           Pr(1)  Pr(2)  Pr(3)\nclass 1:  1.0000 0.0000 0.0000\nclass 2:  1.0000 0.0000 0.0000\nclass 3:  1.0000 0.0000 0.0000\nclass 4:  0.0000 0.6779 0.3221\nclass 5:  0.0000 0.2647 0.7353\nclass 6:  0.0016 0.4368 0.5616\nclass 7:  0.0021 0.3093 0.6886\n\n$total_tourist\n          Pr(1)  Pr(2)  Pr(3)\nclass 1:      1 0.0000 0.0000\nclass 2:      1 0.0000 0.0000\nclass 3:      1 0.0000 0.0000\nclass 4:      0 0.7532 0.2468\nclass 5:      0 0.6566 0.3434\nclass 6:      0 0.6519 0.3481\nclass 7:      0 0.6846 0.3154\n\n$purpose\n           Pr(1)  Pr(2)\nclass 1:  0.2992 0.7008\nclass 2:  0.7189 0.2811\nclass 3:  0.8374 0.1626\nclass 4:  0.3884 0.6116\nclass 5:  0.9883 0.0117\nclass 6:  0.8924 0.1076\nclass 7:  0.9519 0.0481\n\n$info_source\n           Pr(1)  Pr(2)  Pr(3)\nclass 1:  0.3444 0.1203 0.5353\nclass 2:  0.3378 0.1271 0.5351\nclass 3:  0.1951 0.6253 0.1796\nclass 4:  0.2707 0.1525 0.5769\nclass 5:  0.1169 0.7668 0.1164\nclass 6:  0.3570 0.1726 0.4704\nclass 7:  0.2062 0.6508 0.1430\n\n$tour_arrangement\n           Pr(1)  Pr(2)\nclass 1:  0.9947 0.0053\nclass 2:  1.0000 0.0000\nclass 3:  0.0099 0.9901\nclass 4:  1.0000 0.0000\nclass 5:  0.0068 0.9932\nclass 6:  0.9935 0.0065\nclass 7:  0.0148 0.9852\n\n$package_transport_int\n           Pr(1)  Pr(2)\nclass 1:  0.9936 0.0064\nclass 2:  0.9984 0.0016\nclass 3:  0.5418 0.4582\nclass 4:  0.9956 0.0044\nclass 5:  0.3537 0.6463\nclass 6:  0.9960 0.0040\nclass 7:  0.0944 0.9056\n\n$package_accomodation\n           Pr(1)  Pr(2)\nclass 1:  0.9989 0.0011\nclass 2:  1.0000 0.0000\nclass 3:  0.0099 0.9901\nclass 4:  1.0000 0.0000\nclass 5:  0.0195 0.9805\nclass 6:  0.9943 0.0057\nclass 7:  0.0409 0.9591\n\n$package_food\n           Pr(1)  Pr(2)\nclass 1:  1.0000 0.0000\nclass 2:  1.0000 0.0000\nclass 3:  0.0663 0.9337\nclass 4:  1.0000 0.0000\nclass 5:  0.0922 0.9078\nclass 6:  1.0000 0.0000\nclass 7:  0.0981 0.9019\n\n$package_transport_tz\n           Pr(1)  Pr(2)\nclass 1:  1.0000 0.0000\nclass 2:  1.0000 0.0000\nclass 3:  0.1526 0.8474\nclass 4:  1.0000 0.0000\nclass 5:  0.0978 0.9022\nclass 6:  1.0000 0.0000\nclass 7:  0.2985 0.7015\n\n$package_sightseeing\n           Pr(1)  Pr(2)\nclass 1:  1.0000 0.0000\nclass 2:  1.0000 0.0000\nclass 3:  0.3111 0.6889\nclass 4:  1.0000 0.0000\nclass 5:  0.1174 0.8826\nclass 6:  1.0000 0.0000\nclass 7:  0.8322 0.1678\n\n$package_guided_tour\n           Pr(1)  Pr(2)\nclass 1:  0.9990 0.0010\nclass 2:  1.0000 0.0000\nclass 3:  0.2672 0.7328\nclass 4:  1.0000 0.0000\nclass 5:  0.1219 0.8781\nclass 6:  1.0000 0.0000\nclass 7:  0.7727 0.2273\n\n$package_insurance\n           Pr(1)  Pr(2)\nclass 1:  1.0000 0.0000\nclass 2:  1.0000 0.0000\nclass 3:  0.7666 0.2334\nclass 4:  1.0000 0.0000\nclass 5:  0.6220 0.3780\nclass 6:  1.0000 0.0000\nclass 7:  0.6558 0.3442\n\n$payment_mode\n           Pr(1)  Pr(2)\nclass 1:  0.8728 0.1272\nclass 2:  0.9020 0.0980\nclass 3:  0.8926 0.1074\nclass 4:  0.8952 0.1048\nclass 5:  0.8255 0.1745\nclass 6:  0.8282 0.1718\nclass 7:  0.8701 0.1299\n\n$first_trip_tz\n           Pr(1)  Pr(2)\nclass 1:  0.7067 0.2933\nclass 2:  0.3579 0.6421\nclass 3:  0.1315 0.8685\nclass 4:  0.5499 0.4501\nclass 5:  0.0905 0.9095\nclass 6:  0.2961 0.7039\nclass 7:  0.1820 0.8180\n\n$total_cost\n           Pr(1)  Pr(2)  Pr(3)  Pr(4)\nclass 1:  0.6333 0.3306 0.0321 0.0040\nclass 2:  0.2392 0.5142 0.2197 0.0269\nclass 3:  0.1117 0.1712 0.5092 0.2080\nclass 4:  0.5834 0.3354 0.0719 0.0093\nclass 5:  0.0401 0.1024 0.1875 0.6700\nclass 6:  0.1238 0.3660 0.3754 0.1348\nclass 7:  0.0400 0.1096 0.4075 0.4429\n\n$duration\n           Pr(1)  Pr(2)\nclass 1:  0.8714 0.1286\nclass 2:  0.2001 0.7999\nclass 3:  0.4314 0.5686\nclass 4:  0.9475 0.0525\nclass 5:  0.2780 0.7220\nclass 6:  0.2836 0.7164\nclass 7:  0.6292 0.3708\n\n$mainland_zanzibar\n           Pr(1)  Pr(2)\nclass 1:  0.0109 0.9891\nclass 2:  0.1288 0.8712\nclass 3:  0.0453 0.9547\nclass 4:  0.0000 1.0000\nclass 5:  0.0665 0.9335\nclass 6:  0.2767 0.7233\nclass 7:  0.7527 0.2473\n\nEstimated class population shares \n 0.2077 0.1302 0.1529 0.0481 0.2202 0.1369 0.1038 \n \nPredicted class memberships (by modal posterior prob.) \n 0.2107 0.1272 0.153 0.0478 0.222 0.1372 0.1021 \n \n========================================================= \nFit for 7 latent classes: \n========================================================= \nnumber of observations: 4622 \nnumber of estimated parameters: 209 \nresidual degrees of freedom: 4413 \nmaximum log-likelihood: -46230.13 \n \nAIC(7): 92878.26\nBIC(7): 94223.92\nG^2(7): 22020.34 (Likelihood ratio/deviance statistic) \nX^2(7): 57482142 (Chi-square goodness of fit) \n \n\n\n\n##appending model classification to data set\ndf_clustering_recoded$class <- LCA_model$predclass\n\n\n##plotting results - change of x only\nggplot() + geom_bar(data = df_clustering_recoded, aes(x = region)) +\n  facet_wrap(vars(class), ncol = 3)"
  },
  {
    "objectID": "Analysis/Decision_Tree.html",
    "href": "Analysis/Decision_Tree.html",
    "title": "Decision Tree",
    "section": "",
    "text": "Load Packages and Data\n\npacman::p_load(tidyverse, rpart, rpart.plot, sparkline, visNetwork, \n               caret, ranger, patchwork)\n\n\ndf <- read_csv(\"data/touristdata_clean.csv\")\n\ndf_analysis <- df %>% \n  select(!ID) %>% \n  select(!code) %>% \n  select(!country)\n\n#selection of variables as a function here\n\n\n\nRegression Tree\n\nanova.model <- function(min_split, complexity_parameter, max_depth) {\n  rpart(total_cost ~ ., \n        data = df_analysis, \n        method = \"anova\", \n        control = rpart.control(minsplit = min_split, \n                                cp = complexity_parameter, \n                                maxdepth = max_depth))\n  }\n\nfit_tree <- anova.model(5, 0.001, 10)\n\n\nvisTree(fit_tree, edgesFontSize = 14, nodesFontSize = 16, width = \"100%\")\n\n\n\n\n\n\nprintcp(fit_tree)\n\n\nRegression tree:\nrpart(formula = total_cost ~ ., data = df_analysis, method = \"anova\", \n    control = rpart.control(minsplit = min_split, cp = complexity_parameter, \n        maxdepth = max_depth))\n\nVariables actually used in tree construction:\n [1] age_group                 info_source              \n [3] main_activity             most_impressing          \n [5] night_mainland            night_zanzibar           \n [7] package_accomodation      package_food             \n [9] package_guided_tour       package_insurance        \n[11] package_transport_int     payment_mode             \n[13] prop_night_spent_mainland purpose                  \n[15] region                    total_female             \n[17] total_male                total_night_spent        \n[19] total_tourist             tour_arrangement         \n[21] travel_with              \n\nRoot node error: 7.0099e+17/4762 = 1.472e+14\n\nn= 4762 \n\n          CP nsplit rel error  xerror     xstd\n1  0.2221822      0   1.00000 1.00073 0.052755\n2  0.0653800      1   0.77782 0.77882 0.043921\n3  0.0312447      2   0.71244 0.71401 0.040390\n4  0.0098871      4   0.64995 0.65199 0.037636\n5  0.0089989      6   0.63017 0.66014 0.038122\n6  0.0089654      7   0.62118 0.65554 0.037976\n7  0.0066781      8   0.61221 0.65139 0.038044\n8  0.0056746      9   0.60553 0.63348 0.036214\n9  0.0055600     10   0.59986 0.63979 0.036836\n10 0.0053787     11   0.59430 0.63654 0.036672\n11 0.0053253     12   0.58892 0.63464 0.036632\n12 0.0051713     13   0.58359 0.63532 0.036706\n13 0.0048403     14   0.57842 0.63430 0.036700\n14 0.0046831     15   0.57358 0.64220 0.036909\n15 0.0045494     16   0.56890 0.64194 0.036878\n16 0.0045415     17   0.56435 0.65178 0.038238\n17 0.0038489     19   0.55527 0.65786 0.038407\n18 0.0037768     20   0.55142 0.66993 0.038822\n19 0.0036528     21   0.54764 0.67095 0.038833\n20 0.0036431     24   0.53668 0.67338 0.038792\n21 0.0035646     28   0.52211 0.67339 0.038785\n22 0.0032389     29   0.51855 0.67296 0.038770\n23 0.0028148     30   0.51531 0.67709 0.038704\n24 0.0027982     31   0.51249 0.69172 0.039649\n25 0.0027464     35   0.50130 0.69086 0.039619\n26 0.0026194     37   0.49581 0.69254 0.039722\n27 0.0025449     38   0.49319 0.69463 0.039761\n28 0.0021832     39   0.49064 0.69694 0.039896\n29 0.0021695     40   0.48846 0.70089 0.040261\n30 0.0020550     41   0.48629 0.70580 0.040501\n31 0.0019419     42   0.48423 0.71672 0.040853\n32 0.0019108     43   0.48229 0.71532 0.040761\n33 0.0018682     44   0.48038 0.71814 0.040967\n34 0.0017684     45   0.47851 0.72098 0.041013\n35 0.0016929     47   0.47498 0.73492 0.041413\n36 0.0016091     51   0.46820 0.73808 0.041738\n37 0.0015919     54   0.46338 0.73888 0.041720\n38 0.0015800     55   0.46179 0.73873 0.041720\n39 0.0015561     56   0.46021 0.73709 0.041694\n40 0.0014456     58   0.45709 0.73571 0.042139\n41 0.0014314     63   0.44986 0.73925 0.042170\n42 0.0013349     64   0.44843 0.74239 0.042222\n43 0.0013221     66   0.44576 0.74392 0.042205\n44 0.0012398     67   0.44444 0.74467 0.042201\n45 0.0011227     69   0.44196 0.74999 0.042395\n46 0.0010561     70   0.44084 0.75590 0.042415\n47 0.0010518     74   0.43661 0.75898 0.042466\n48 0.0010445     75   0.43556 0.75898 0.042466\n49 0.0010335     76   0.43452 0.75944 0.042465\n50 0.0010176     77   0.43348 0.75889 0.042457\n51 0.0010152     78   0.43247 0.75893 0.042470\n52 0.0010000     79   0.43145 0.76000 0.042479\n\n\n\nbestcp <- fit_tree$cptable[which.min(fit_tree$cptable[,\"xerror\"]),\"CP\"]\npruned_tree <- prune(fit_tree, cp = bestcp)\n\nvisTree(pruned_tree, edgesFontSize = 14, nodesFontSize = 16, width = \"100%\")\n\n\n\n\n\n\n\nRandom Forest\n\nset.seed(1234)\n\ntrainIndex <- createDataPartition(df_analysis$total_cost, p = 0.8, \n                                  list = FALSE, \n                                  times = 1)\n\ndf_train <- df_analysis[trainIndex,]\ndf_test <- df_analysis[-trainIndex,]\n\n\n#can we have an option for whether user wants to do parameter tuning?\n#default is simple bootstrap resampling\ntrctrl <- trainControl(method = \"none\")\n\n#we can give one other option of (repeated) k-fold cross-validation where they can decide on the k and number of repeats\ncvControl <- trainControl(##default of 10, range: 3-50\n                           method = \"cv\",\n                           number = 10)\n\nrepeatcvControl <- trainControl(##default of 10, range: 3-50\n                           method = \"repeatedcv\",\n                           number = 10,\n                           ##default of 3, range: 3-10\n                           repeats = 10)\n\n#actual model\nrf_model <- train(total_cost ~ ., \n                  data = df_train,\n                  method = \"ranger\", \n                  trControl = repeatcvControl, \n            #trControl (refer to above objects created)\n                  num.trees = 50, #can consider range of 5 to 200 trees\n                  importance = \"impurity\", \n            #variable importance computation: \"impurity\", \"permutation\"\n                  tuneGrid = data.frame(mtry = sqrt(ncol(df_train)),\n                                        min.node.size = 5,\n                                        splitrule = \"variance\") \n            #splitrule: \"variance\" (default), \"extratrees\", \"maxstat\", \"beta\"\n            #min.node.size: default of 5 for regression trees\n            #mtry: default is square root of number of variables\n                  ) \n\n\ndf_test$fit_forest <- predict(rf_model, df_test)\n\n\nrf_scatter <- ggplot() + \n  geom_point(aes(x = df_test$total_cost, y = df_test$fit_forest)) +\n  labs(x = \"Actual Total Cost\", y = \"Predicted Total Cost\",\n       title = paste0(\"R-squared: \", round(rf_model$finalModel$r.squared, digits=2))) + \n  theme(axis.text = element_text(size = 5),\n        axis.title = element_text(size = 8),\n        title = element_text(size = 8))\n\nrf_residuals <- ggplot() + \n  geom_point(aes(x = df_test$total_cost, \n                 y = (df_test$fit_forest-df_test$total_cost)),\n             col=\"blue3\") +\n  labs(y =\"Residuals (Predicted-Actual)\", x = \"Actual Total Cost\") + \n  geom_hline(yintercept = 0, col=\"red4\", linetype = \"dashed\", linewidth = 0.5) + \n  theme(axis.text = element_text(size = 5),\n        axis.title = element_text(size = 8))\n\np <- rf_scatter + rf_residuals + \n  plot_annotation(title = \"Scatterplot of predicted vs. actual total cost\", \n                  theme = theme(plot.title = element_text(size = 18)))\n\np\n\n\n\n\n\n#top 20 variable importance\n#can we show a title for this table based on what was selected in the model i.e. impurity vs permutation\n\nvarImp(rf_model)\n\nranger variable importance\n\n  only 20 most important variables shown (out of 57)\n\n                                        Overall\ntotal_tourist                            100.00\ntotal_night_spent                         76.30\npackage_transport_tz                      70.21\npackage_transport_int                     69.69\ntour_arrangementPackage Tour              64.64\ntotal_female                              57.60\nnight_mainland                            54.91\ntotal_male                                52.75\nnight_zanzibar                            41.79\npackage_accomodation                      40.91\npackage_food                              39.31\nprop_night_spent_mainland                 37.94\npackage_guided_tour                       35.47\ntravel_withSpouse and Children            30.47\npurposeLeisure and Holidays               28.00\nregionEurope                              26.14\nage_group65+                              24.34\npackage_sightseeing                       24.17\nregionAmericas                            23.69\ninfo_sourceTravel, agent, tour operator   22.72\n\n\n\n##this is related to the model built above, but can we also have a separate tab where model takes in the other parameters set above, but here we allow for a range of the number of trees. This will allow us to plot the R-squared value vs the number of trees. \n\n##our range can remain at 5-500 but would suggest we limit them to select no more than 100 numbers at one go e.g. 5-105 otherwise it will take very long to run depending on which trControl we choose to use\n\ntree_range <- 5:150\n\nrsquared_trees <- c()\n\nfor (i in tree_range){\n  rf_model <- train(total_cost ~ ., \n                  data = df_train,\n                  method = \"ranger\", \n                  trControl = trctrl, \n                  num.trees = i,\n                  importance = \"impurity\", \n                  tuneGrid = data.frame(mtry = sqrt(ncol(df_train)),\n                                        min.node.size = 5,\n                                        splitrule = \"variance\"))\n  \n  rsquared_trees <- append(rsquared_trees, rf_model$finalModel$r.squared)\n}\n\nrsquared_plot <- data.frame(tree_range, rsquared_trees)\n\nggplot(df = rsquared_plot) + \n  geom_point(aes(x = tree_range, y = rsquared_trees)) + \n  labs(x = \"Number of trees\", y = \"R-squared values\", \n       title = \"R-squared vs. Number of Trees Plot\")\n\n\n\n\n\n\nXGBoost"
  },
  {
    "objectID": "DataPrep/DataPrep.html",
    "href": "DataPrep/DataPrep.html",
    "title": "Data Preparation",
    "section": "",
    "text": "pacman::p_load(\"ExPanDaR\", \"countrycode\", \"kableExtra\", \"tidyverse\")\n\n\n\n\n\ntouristdata <- read_csv(\"data/Train.csv\")\nstr(touristdata)\n\nspc_tbl_ [4,809 × 23] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ID                   : chr [1:4809] \"tour_0\" \"tour_10\" \"tour_1000\" \"tour_1002\" ...\n $ country              : chr [1:4809] \"SWIZERLAND\" \"UNITED KINGDOM\" \"UNITED KINGDOM\" \"UNITED KINGDOM\" ...\n $ age_group            : chr [1:4809] \"45-64\" \"25-44\" \"25-44\" \"25-44\" ...\n $ travel_with          : chr [1:4809] \"Friends/Relatives\" NA \"Alone\" \"Spouse\" ...\n $ total_female         : num [1:4809] 1 1 0 1 1 0 0 1 0 1 ...\n $ total_male           : num [1:4809] 1 0 1 1 0 1 1 1 1 0 ...\n $ purpose              : chr [1:4809] \"Leisure and Holidays\" \"Leisure and Holidays\" \"Visiting Friends and Relatives\" \"Leisure and Holidays\" ...\n $ main_activity        : chr [1:4809] \"Wildlife tourism\" \"Cultural tourism\" \"Cultural tourism\" \"Wildlife tourism\" ...\n $ info_source          : chr [1:4809] \"Friends, relatives\" \"others\" \"Friends, relatives\" \"Travel, agent, tour operator\" ...\n $ tour_arrangement     : chr [1:4809] \"Independent\" \"Independent\" \"Independent\" \"Package Tour\" ...\n $ package_transport_int: chr [1:4809] \"No\" \"No\" \"No\" \"No\" ...\n $ package_accomodation : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_food         : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_transport_tz : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_sightseeing  : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_guided_tour  : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_insurance    : chr [1:4809] \"No\" \"No\" \"No\" \"No\" ...\n $ night_mainland       : num [1:4809] 13 14 1 11 7 9 9 10 4 5 ...\n $ night_zanzibar       : num [1:4809] 0 7 31 0 4 3 0 3 0 0 ...\n $ payment_mode         : chr [1:4809] \"Cash\" \"Cash\" \"Cash\" \"Cash\" ...\n $ first_trip_tz        : chr [1:4809] \"No\" \"Yes\" \"No\" \"Yes\" ...\n $ most_impressing      : chr [1:4809] \"Friendly People\" \"Wonderful Country, Landscape, Nature\" \"Excellent Experience\" \"Friendly People\" ...\n $ total_cost           : num [1:4809] 674603 3214907 3315000 7790250 1657500 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = col_character(),\n  ..   country = col_character(),\n  ..   age_group = col_character(),\n  ..   travel_with = col_character(),\n  ..   total_female = col_double(),\n  ..   total_male = col_double(),\n  ..   purpose = col_character(),\n  ..   main_activity = col_character(),\n  ..   info_source = col_character(),\n  ..   tour_arrangement = col_character(),\n  ..   package_transport_int = col_character(),\n  ..   package_accomodation = col_character(),\n  ..   package_food = col_character(),\n  ..   package_transport_tz = col_character(),\n  ..   package_sightseeing = col_character(),\n  ..   package_guided_tour = col_character(),\n  ..   package_insurance = col_character(),\n  ..   night_mainland = col_double(),\n  ..   night_zanzibar = col_double(),\n  ..   payment_mode = col_character(),\n  ..   first_trip_tz = col_character(),\n  ..   most_impressing = col_character(),\n  ..   total_cost = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\n\n\n\n\n\nunique(touristdata$country)\n\n  [1] \"SWIZERLAND\"               \"UNITED KINGDOM\"          \n  [3] \"CHINA\"                    \"SOUTH AFRICA\"            \n  [5] \"UNITED STATES OF AMERICA\" \"NIGERIA\"                 \n  [7] \"INDIA\"                    \"BRAZIL\"                  \n  [9] \"CANADA\"                   \"MALT\"                    \n [11] \"MOZAMBIQUE\"               \"RWANDA\"                  \n [13] \"AUSTRIA\"                  \"MYANMAR\"                 \n [15] \"GERMANY\"                  \"KENYA\"                   \n [17] \"ALGERIA\"                  \"IRELAND\"                 \n [19] \"DENMARK\"                  \"SPAIN\"                   \n [21] \"FRANCE\"                   \"ITALY\"                   \n [23] \"EGYPT\"                    \"QATAR\"                   \n [25] \"MALAWI\"                   \"JAPAN\"                   \n [27] \"SWEDEN\"                   \"NETHERLANDS\"             \n [29] \"UAE\"                      \"UGANDA\"                  \n [31] \"AUSTRALIA\"                \"YEMEN\"                   \n [33] \"NEW ZEALAND\"              \"BELGIUM\"                 \n [35] \"NORWAY\"                   \"ZIMBABWE\"                \n [37] \"ZAMBIA\"                   \"CONGO\"                   \n [39] \"BURGARIA\"                 \"PAKISTAN\"                \n [41] \"GREECE\"                   \"MAURITIUS\"               \n [43] \"DRC\"                      \"OMAN\"                    \n [45] \"PORTUGAL\"                 \"KOREA\"                   \n [47] \"SWAZILAND\"                \"TUNISIA\"                 \n [49] \"KUWAIT\"                   \"DOMINICA\"                \n [51] \"ISRAEL\"                   \"FINLAND\"                 \n [53] \"CZECH REPUBLIC\"           \"UKRAIN\"                  \n [55] \"ETHIOPIA\"                 \"BURUNDI\"                 \n [57] \"SCOTLAND\"                 \"RUSSIA\"                  \n [59] \"GHANA\"                    \"NIGER\"                   \n [61] \"MALAYSIA\"                 \"COLOMBIA\"                \n [63] \"LUXEMBOURG\"               \"NEPAL\"                   \n [65] \"POLAND\"                   \"SINGAPORE\"               \n [67] \"LITHUANIA\"                \"HUNGARY\"                 \n [69] \"INDONESIA\"                \"TURKEY\"                  \n [71] \"TRINIDAD TOBACCO\"         \"IRAQ\"                    \n [73] \"SLOVENIA\"                 \"UNITED ARAB EMIRATES\"    \n [75] \"COMORO\"                   \"SRI LANKA\"               \n [77] \"IRAN\"                     \"MONTENEGRO\"              \n [79] \"ANGOLA\"                   \"LEBANON\"                 \n [81] \"SLOVAKIA\"                 \"ROMANIA\"                 \n [83] \"MEXICO\"                   \"LATVIA\"                  \n [85] \"CROATIA\"                  \"CAPE VERDE\"              \n [87] \"SUDAN\"                    \"COSTARICA\"               \n [89] \"CHILE\"                    \"NAMIBIA\"                 \n [91] \"TAIWAN\"                   \"SERBIA\"                  \n [93] \"LESOTHO\"                  \"GEORGIA\"                 \n [95] \"PHILIPINES\"               \"IVORY COAST\"             \n [97] \"MADAGASCAR\"               \"DJIBOUT\"                 \n [99] \"CYPRUS\"                   \"ARGENTINA\"               \n[101] \"URUGUAY\"                  \"MORROCO\"                 \n[103] \"THAILAND\"                 \"BERMUDA\"                 \n[105] \"ESTONIA\"                 \n\n\n\n\n\n\nmissing.values <- touristdata %>%\n    gather(key = \"key\", value = \"val\") %>%\n    mutate(is.missing = is.na(val)) %>%\n    group_by(key, is.missing) %>%\n    summarise(num.missing = n()) %>%\n    filter(is.missing==T) %>%\n    select(-is.missing) %>%\n    arrange(desc(num.missing)) \nmissing.values %>% kable()\n\n\n\n \n  \n    key \n    num.missing \n  \n \n\n  \n    travel_with \n    1114 \n  \n  \n    most_impressing \n    313 \n  \n  \n    total_male \n    5 \n  \n  \n    total_female \n    3 \n  \n\n\n\n\n\nVisualising missing values\n\nmissing_values <- function(origin, vari = \"country\"){\nprepare_missing_values_graph(origin, ts_id = vari)\n}\n\n\nmissing_values(touristdata, \"country\")\n\n\n\n\n\nmissing_values(touristdata, \"age_group\")\n\n\n\n\n\n\n\n\nconvertbinary <- function(x){\n    as.factor(ifelse(x==\"Yes\", 1,0))\n}\n\n\ntouristdata_min_na <- touristdata %>%\n  mutate(total_tourist = total_male + total_female,\n         .after = total_male) %>%\n  mutate(total_night_spent = night_mainland + night_zanzibar,\n         prop_night_spent_mainland = round(night_mainland/total_night_spent,2),\n         .after = night_zanzibar) %>%\n  mutate(travel_with = case_when(total_tourist == 1 ~ \"Alone\",\n                                 TRUE ~ travel_with)) %>%\n  mutate(most_impressing = case_when(is.na(most_impressing) ~ \"No comments\",\n                                     TRUE ~ most_impressing)) %>%\n  mutate(across(package_transport_int:package_insurance, convertbinary)) %>%\n  mutate(across(first_trip_tz, convertbinary))\n\n\nmissing.values.clean <- touristdata_min_na %>%\n    gather(key = \"key\", value = \"val\") %>%\n    mutate(is.missing = is.na(val)) %>%\n    group_by(key, is.missing) %>%\n    summarise(num.missing = n()) %>%\n    filter(is.missing==T) %>%\n    select(-is.missing) %>%\n    arrange(desc(num.missing)) \nmissing.values.clean %>% kable()\n\n\n\n \n  \n    key \n    num.missing \n  \n \n\n  \n    travel_with \n    29 \n  \n  \n    total_tourist \n    8 \n  \n  \n    total_male \n    5 \n  \n  \n    total_female \n    3 \n  \n\n\n\n\n\n\nmissing_values(touristdata_min_na, \"country\")\n\n\n\n\n\ntouristdata_min_na %>%\n  filter(country == \"CHILE\")\n\n# A tibble: 2 × 26\n  ID     country age_g…¹ trave…² total…³ total…⁴ total…⁵ purpose main_…⁶ info_…⁷\n  <chr>  <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>   <chr>  \n1 tour_… CHILE   25-44   Friend…       1       1       2 Leisur… Wildli… Friend…\n2 tour_… CHILE   25-44   Alone         0       1       1 Leisur… Wildli… Travel…\n# … with 16 more variables: tour_arrangement <chr>,\n#   package_transport_int <fct>, package_accomodation <fct>,\n#   package_food <fct>, package_transport_tz <fct>, package_sightseeing <fct>,\n#   package_guided_tour <fct>, package_insurance <fct>, night_mainland <dbl>,\n#   night_zanzibar <dbl>, total_night_spent <dbl>,\n#   prop_night_spent_mainland <dbl>, payment_mode <chr>, first_trip_tz <fct>,\n#   most_impressing <chr>, total_cost <dbl>, and abbreviated variable names …\n\n\n\ntouristdata_no_na <- touristdata_min_na %>% drop_na()\ntouristdata_no_na\n\n# A tibble: 4,762 × 26\n   ID    country age_g…¹ trave…² total…³ total…⁴ total…⁵ purpose main_…⁶ info_…⁷\n   <chr> <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>   <chr>  \n 1 tour… SWIZER… 45-64   Friend…       1       1       2 Leisur… Wildli… Friend…\n 2 tour… UNITED… 25-44   Alone         1       0       1 Leisur… Cultur… others \n 3 tour… UNITED… 25-44   Alone         0       1       1 Visiti… Cultur… Friend…\n 4 tour… UNITED… 25-44   Spouse        1       1       2 Leisur… Wildli… Travel…\n 5 tour… CHINA   1-24    Alone         1       0       1 Leisur… Wildli… Travel…\n 6 tour… UNITED… 25-44   Alone         0       1       1 Leisur… Wildli… Travel…\n 7 tour… SOUTH … 45-64   Alone         0       1       1 Busine… Mounta… Friend…\n 8 tour… UNITED… 45-64   Friend…       1       1       2 Leisur… Wildli… Travel…\n 9 tour… NIGERIA 25-44   Alone         0       1       1 Leisur… Cultur… Travel…\n10 tour… INDIA   25-44   Alone         1       0       1 Busine… Wildli… Travel…\n# … with 4,752 more rows, 16 more variables: tour_arrangement <chr>,\n#   package_transport_int <fct>, package_accomodation <fct>,\n#   package_food <fct>, package_transport_tz <fct>, package_sightseeing <fct>,\n#   package_guided_tour <fct>, package_insurance <fct>, night_mainland <dbl>,\n#   night_zanzibar <dbl>, total_night_spent <dbl>,\n#   prop_night_spent_mainland <dbl>, payment_mode <chr>, first_trip_tz <fct>,\n#   most_impressing <chr>, total_cost <dbl>, and abbreviated variable names …\n\n\n\n\n\n\nunique(touristdata_no_na$country) \n\n  [1] \"SWIZERLAND\"               \"UNITED KINGDOM\"          \n  [3] \"CHINA\"                    \"SOUTH AFRICA\"            \n  [5] \"UNITED STATES OF AMERICA\" \"NIGERIA\"                 \n  [7] \"INDIA\"                    \"BRAZIL\"                  \n  [9] \"CANADA\"                   \"MALT\"                    \n [11] \"MOZAMBIQUE\"               \"RWANDA\"                  \n [13] \"AUSTRIA\"                  \"MYANMAR\"                 \n [15] \"GERMANY\"                  \"KENYA\"                   \n [17] \"ALGERIA\"                  \"IRELAND\"                 \n [19] \"DENMARK\"                  \"SPAIN\"                   \n [21] \"FRANCE\"                   \"ITALY\"                   \n [23] \"EGYPT\"                    \"QATAR\"                   \n [25] \"MALAWI\"                   \"JAPAN\"                   \n [27] \"SWEDEN\"                   \"NETHERLANDS\"             \n [29] \"UAE\"                      \"UGANDA\"                  \n [31] \"AUSTRALIA\"                \"YEMEN\"                   \n [33] \"NEW ZEALAND\"              \"BELGIUM\"                 \n [35] \"NORWAY\"                   \"ZIMBABWE\"                \n [37] \"ZAMBIA\"                   \"CONGO\"                   \n [39] \"BURGARIA\"                 \"PAKISTAN\"                \n [41] \"GREECE\"                   \"MAURITIUS\"               \n [43] \"DRC\"                      \"OMAN\"                    \n [45] \"PORTUGAL\"                 \"KOREA\"                   \n [47] \"SWAZILAND\"                \"TUNISIA\"                 \n [49] \"KUWAIT\"                   \"DOMINICA\"                \n [51] \"ISRAEL\"                   \"FINLAND\"                 \n [53] \"CZECH REPUBLIC\"           \"UKRAIN\"                  \n [55] \"ETHIOPIA\"                 \"BURUNDI\"                 \n [57] \"SCOTLAND\"                 \"RUSSIA\"                  \n [59] \"GHANA\"                    \"NIGER\"                   \n [61] \"MALAYSIA\"                 \"COLOMBIA\"                \n [63] \"LUXEMBOURG\"               \"NEPAL\"                   \n [65] \"POLAND\"                   \"SINGAPORE\"               \n [67] \"LITHUANIA\"                \"HUNGARY\"                 \n [69] \"INDONESIA\"                \"TURKEY\"                  \n [71] \"TRINIDAD TOBACCO\"         \"IRAQ\"                    \n [73] \"SLOVENIA\"                 \"UNITED ARAB EMIRATES\"    \n [75] \"COMORO\"                   \"SRI LANKA\"               \n [77] \"IRAN\"                     \"MONTENEGRO\"              \n [79] \"ANGOLA\"                   \"LEBANON\"                 \n [81] \"SLOVAKIA\"                 \"ROMANIA\"                 \n [83] \"MEXICO\"                   \"LATVIA\"                  \n [85] \"CROATIA\"                  \"CAPE VERDE\"              \n [87] \"SUDAN\"                    \"COSTARICA\"               \n [89] \"NAMIBIA\"                  \"TAIWAN\"                  \n [91] \"SERBIA\"                   \"LESOTHO\"                 \n [93] \"GEORGIA\"                  \"PHILIPINES\"              \n [95] \"IVORY COAST\"              \"MADAGASCAR\"              \n [97] \"DJIBOUT\"                  \"CYPRUS\"                  \n [99] \"ARGENTINA\"                \"URUGUAY\"                 \n[101] \"MORROCO\"                  \"THAILAND\"                \n[103] \"CHILE\"                    \"BERMUDA\"                 \n[105] \"ESTONIA\"                 \n\n\n\ntouristdata_clean <- touristdata_no_na %>% \n  mutate(country = case_when(country == \"BURGARIA\" ~ \"BULGARIA\",\n                             country == \"DJIBOUT\" ~ \"DJIBOUTI\",\n                             country == \"MALT\" ~ \"MALTA\",\n                             country == \"MORROCO\" ~ \"MOROCCO\",\n                             country == \"PHILIPINES\" ~ \"PHILIPPINES\",\n                             country == \"SCOTLAND\" ~ \"UNITED KINGDOM\",\n                             country == \"SWIZERLAND\" ~ \"SWITZERLAND\",\n                             TRUE ~ country)) %>%\n  mutate(region = countrycode(sourcevar = country,\n                              origin = \"country.name\",\n                              destination = \"continent\"),\n         code = countrycode(sourcevar = country,\n                            origin = \"country.name\",\n                            destination = \"iso3c\"),\n         .after = country)\n\ntouristdata_clean\n\n# A tibble: 4,762 × 28\n   ID       country region code  age_g…¹ trave…² total…³ total…⁴ total…⁵ purpose\n   <chr>    <chr>   <chr>  <chr> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 tour_0   SWITZE… Europe CHE   45-64   Friend…       1       1       2 Leisur…\n 2 tour_10  UNITED… Europe GBR   25-44   Alone         1       0       1 Leisur…\n 3 tour_10… UNITED… Europe GBR   25-44   Alone         0       1       1 Visiti…\n 4 tour_10… UNITED… Europe GBR   25-44   Spouse        1       1       2 Leisur…\n 5 tour_10… CHINA   Asia   CHN   1-24    Alone         1       0       1 Leisur…\n 6 tour_10… UNITED… Europe GBR   25-44   Alone         0       1       1 Leisur…\n 7 tour_10… SOUTH … Africa ZAF   45-64   Alone         0       1       1 Busine…\n 8 tour_10… UNITED… Ameri… USA   45-64   Friend…       1       1       2 Leisur…\n 9 tour_101 NIGERIA Africa NGA   25-44   Alone         0       1       1 Leisur…\n10 tour_10… INDIA   Asia   IND   25-44   Alone         1       0       1 Busine…\n# … with 4,752 more rows, 18 more variables: main_activity <chr>,\n#   info_source <chr>, tour_arrangement <chr>, package_transport_int <fct>,\n#   package_accomodation <fct>, package_food <fct>, package_transport_tz <fct>,\n#   package_sightseeing <fct>, package_guided_tour <fct>,\n#   package_insurance <fct>, night_mainland <dbl>, night_zanzibar <dbl>,\n#   total_night_spent <dbl>, prop_night_spent_mainland <dbl>,\n#   payment_mode <chr>, first_trip_tz <fct>, most_impressing <chr>, …\n\n\n\n#write_csv(touristdata_clean,'C:/michaeldjo/VAP/DataPrep/data/touristdata_clean.csv')"
  },
  {
    "objectID": "EDA/CDA.html",
    "href": "EDA/CDA.html",
    "title": "Confirmatory Data Analysis",
    "section": "",
    "text": "pacman::p_load(\"tmap\", \"ExPanDaR\", \"kableExtra\", \"ggstatsplot\", \"plotly\", \"DT\", \"scales\",\"tidyverse\")"
  },
  {
    "objectID": "EDA/CDA.html#loading-the-data",
    "href": "EDA/CDA.html#loading-the-data",
    "title": "Confirmatory Data Analysis",
    "section": "2. Loading the data",
    "text": "2. Loading the data\n\ntouristdata_clean <- read_csv(\"data/touristdata_clean.csv\")\n\n\n2.1 Adding cost per pax\n\ntouristdata_clean <- touristdata_clean %>%\n  filter(total_cost > 0,\n         total_tourist > 0,\n         total_night_spent > 0) %>%\n  mutate(cost_per_pax = round(total_cost/total_tourist,0),\n         cost_per_night = round(total_cost/total_night_spent,0),\n         cost_per_pax_night = round(total_cost/total_tourist/total_night_spent,0))"
  },
  {
    "objectID": "EDA/CDA.html#data-overview",
    "href": "EDA/CDA.html#data-overview",
    "title": "Confirmatory Data Analysis",
    "section": "3. Data overview",
    "text": "3. Data overview\n\n3.1 Desriptive Statistics\n\ndescr <- prepare_descriptive_table(touristdata_clean %>%\n                                       select(!c(14,15,16,17,18,19,20,26))\n                                   ) \n\n\ndatatable(descr$df, class= \"hover\") %>%\n  formatRound(column = c(\"Mean\", \"Std. dev.\", \"Median\"), digits=2)\n\n\n\n\n\n\n\n\n3.2 Distribution of numerical variables\n\nplot <- touristdata_clean %>% \n  select(c(7,8,9,21,22,23,24,28,29,30,31)) %>% \n  gather() %>%\n  ggplot(aes(value)) +\n  facet_wrap( ~key, ncol=4, scales=\"free\") +\n  geom_histogram()\n\nggplotly(plot)\n\n\n\n\n\nNote:\n\nMajority spent on mainland\nMostly travel <5 people\nSpent 5 days on median\n\n\n\n3.3 Distribution of categorical variables\n\nplot <- touristdata_clean %>% \n  select(c(3,5,6,10,11,12,13,14,15,16,17,18,19,20,25,26,27)) %>% \n  gather() %>%\n  ggplot(aes(value)) +\n  facet_wrap( ~key, ncol=3, scales=\"free\") +\n  geom_bar()\n\nggplotly(plot)\n\n\n\n\n\nNote:\n\nMany younger tourist (25-44)\nInfo mainly comes from friends and travel agents\nMany comes for wildlife tourism and beach tourism\nMany European and African Tourists\nMany travel alone\nMany comes for leisure and holidays"
  },
  {
    "objectID": "EDA/CDA.html#exploring-by-regions-and-countries",
    "href": "EDA/CDA.html#exploring-by-regions-and-countries",
    "title": "Confirmatory Data Analysis",
    "section": "4. Exploring by Regions and Countries",
    "text": "4. Exploring by Regions and Countries\n\n4.1 Plotting the choropleth map for aggregated metrics\nThe object World is a spatial object of class sf from the sf package; it is a data.frame with a special column that contains a geometry for each row, in this case polygons\nReference - https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html\n\ndata(\"World\")\n\n\ntouristdata_clean_country <- touristdata_clean %>%\n  group_by(country,code,region) %>%\n  summarise(total_female = sum(total_female),\n            total_male = sum(total_male),\n            total_tourist = sum(total_tourist),\n            total_cost = round(sum(total_cost),0),\n            total_night_spent = round(sum(total_night_spent),0),\n            cost_per_pax = round(mean(cost_per_pax),0),\n            cost_per_night = round(mean(cost_per_night),0),\n            cost_per_pax_night = round(mean(cost_per_pax_night),0),\n            trips = n()) %>%\n  mutate(avg_night_spent = round(total_night_spent/trips,0)) %>%\n  ungroup()\n\nJoining the two dataframes together\n\ntouristdata_clean_map <- left_join(World, \n                                 touristdata_clean_country, \n                          by = c(\"iso_a3\" = \"code\")) %>%\n  select(-c(2:15)) %>%\n  na.omit()\n\n\nplot_map_eda <- function(metric = \"total_tourist\", style = \"jenks\", classes = 5, minvisitors = 30){\n\nmetric_text = case_when(metric == \"total_female\" ~ \"Number of Female Visitors\",\n                        metric == \"total_male\" ~ \"Number of Male Visitors\",\n                        metric == \"total_tourist\" ~ \"Number of Visitors\",\n                        metric == \"total_cost\" ~ \"Total Spending (TZS)\",\n                        metric == \"cost_per_pax\" ~ \"Average Individual Spending (TZS)\",\n                        metric == \"cost_per_night\" ~ \"Average Spending per Night (TZS)\",\n                        metric == \"cost_per_pax_night\" ~ \"Average Individual Spending per Night (TZS)\")\n  \ntmap_mode(\"view\")\n\ntm_shape(touristdata_clean_map %>%\n           filter(total_tourist >= minvisitors))+\n  tm_fill(metric, \n          n = classes,\n          style = style, \n          palette=\"YlGn\", \n          id = \"country\",\n          title = metric_text\n          ) +\n  \n  tm_borders(col = \"grey20\",\n             alpha = 0.5) \n\n}\n\n\nplot_map_eda(metric = \"cost_per_pax_night\", style = \"jenks\", classes = 6, minvisitors = 20)\n\n\n\n\n\n\nNote:\n\nMajority of tourists come from US, Western Europe, and South Africa\nMany outliers in individual average spending, so only focus on countries with at least 20 visitors, then it’s revealed that Australians spend the highest, followed by Americans and Canadians.\n\n\n\n4.2 CDA by Regions\n\n4.2.1 For Numerical Variables\n\nplot_ANOVA_region <- function(metric = \"cost_per_pax_night\", minvisitors = 30, testtype = \"np\", pair = \"ns\", compare = T, conf = 0.95, nooutliers = T) {\n  \nmetric_text = case_when(metric == \"total_female\" ~ \"Number of Female Visitors\",\n                        metric == \"total_male\" ~ \"Number of Male Visitors\",\n                        metric == \"total_tourist\" ~ \"Number of Visitors\",\n                        metric == \"total_cost\" ~ \"Total Spending (TZS)\",\n                        metric == \"cost_per_pax\" ~ \"Individual Spending (TZS)\",\n                        metric == \"cost_per_night\" ~ \"Spending per Night (TZS)\",\n                        metric == \"cost_per_pax_night\" ~ \"Individual Spending per Night (TZS)\",\n                        metric == \"prop_night_spent_mainland\" ~ \"Proportion of Night spent in Mainland Tanzania\",\n                        TRUE ~ metric)\n\nparatext <- case_when(testtype == \"p\" ~ \"Mean (Parametric)\",\n                      testtype == \"np\" ~ \"Median (Non-Parametric)\",\n                      testtype == \"r\" ~ \"Mean (Robust t-test)\",\n                      testtype == \"bayes\" ~ \"Mean (Bayesian)\",\n                      )\n\ntouristdata_countrylist <- touristdata_clean_country %>%\n  filter(total_tourist >= minvisitors)\n\ncountrylist <- unique(touristdata_countrylist$country)\n\ntouristdata_ANOVA <- touristdata_clean %>%\n  filter(country %in% countrylist) %>%\n  mutate(region = fct_reorder(region, !!sym(metric), median, .desc = TRUE)) %>%\n  drop_na()\n\nif(nooutliers == T){\n  touristdata_ANOVA <- touristdata_ANOVA %>%\n      treat_outliers() \n}\n\ntouristdata_ANOVA %>% \n  ggbetweenstats(x = region, y = !!sym(metric),\n                 xlab = \"Region\", ylab = metric_text,\n                 type = testtype, pairwise.comparisons = T, pairwise.display = pair, \n                 mean.ci = T, p.adjust.method = \"fdr\",  conf.level = conf,\n                 title = paste0(\"Comparison of \",paratext,\" \",metric_text, \" across Regions\"),\n                 package = \"ggthemes\", palette = \"Tableau_10\")\n\n}\n\n\nplot_ANOVA_region(metric = \"cost_per_pax_night\", minvisitors = 30, testtype = \"np\", pair = \"ns\", compare = T, conf = 0.95, nooutliers = T)\n\n\n\n\nNote: Outliers can be treated Ability to exclude countries with less than minvisitors limit\n\nOceania visitors spend the most while African visitors tends to spend the least\n\n\nplot_ANOVA_region(metric = \"prop_night_spent_mainland\", minvisitors = 30, testtype = \"np\", pair = \"ns\", conf = 0.95)\n\n\n\n\nNote : European customers spend more time in Zanzibar\n\n\n4.2.2 For Categorical Variables\n\nplot_barstats_region <- function(metric = \"purpose\", minvisitors = 30, testtype = \"np\",conf = 0.95) {\n  \nmetric_text = case_when(metric == \"age_group\" ~ \"Age Group\",\n                        metric == \"travel_with\" ~ \"Travelling Companion\",\n                        metric == \"purpose\" ~ \"Purpose\",\n                        metric == \"main_activity\" ~ \"Main Activity\",\n                        metric == \"info_source\" ~ \"Source of Information\",\n                        metric == \"tour_arrangement\" ~ \"Tour Arrangement\",\n                        metric == \"package_transport_int\" ~ \"Include International Transportation?\",\n                        metric == \"package_accomodation\" ~ \"Include accomodation service?\",\n                        metric == \"package_food\" ~ \"Include food service?\",\n                        metric == \"package_transport_tz\" ~ \"Include domestic transport service?\",\n                        metric == \"package_sightseeing\" ~ \"Include sightseeing service?\",\n                        metric == \"package_guided_tour\" ~ \"Include guided tour?\",\n                        metric == \"package_insurance\" ~ \"Insurance Included?\",\n                        metric == \"payment_mode\" ~ \"Mode of Payment\",\n                        metric == \"first_trip_tz\" ~ \"First trip to Tanzania?\",\n                        metric == \"most_impressing\" ~ \"Most impressive about Tanzania?\",\n                        TRUE ~ metric)\n\ntouristdata_countrylist <- touristdata_clean_country %>%\n  filter(total_tourist >= minvisitors)\n\ncountrylist <- unique(touristdata_countrylist$country)\n\ntouristdata_barstats <- touristdata_clean %>%\n  filter(country %in% countrylist) %>%\n  drop_na()\n\ntouristdata_barstats %>% \n  ggbarstats(x = !!sym(metric), y = region,\n             xlab = \"Region\", legend.title = metric_text,\n             type = testtype, conf.level = conf,\n             palette = \"Set2\")\n\n}\n\n\nplot_barstats_region(metric = \"travel_with\", minvisitors = 30, testtype = \"np\", conf = 0.95)\n\n\n\n\n\nplot_barstats_region(metric = \"purpose\", minvisitors = 30, testtype = \"np\", conf = 0.95)\n\n\n\n\n\nplot_barstats_region(metric = \"package_insurance\", minvisitors = 30, testtype = \"np\", conf = 0.95)\n\n\n\n\n\nplot_barstats_region(metric = \"first_trip_tz\", minvisitors = 30, testtype = \"np\", conf = 0.95)\n\n\n\n\n\n\n\n4.3 CDA by Selected Countries\nExamining the largest spender by country\n\ntouristdata_clean_country_sorted <- touristdata_clean_country %>%\n  filter(total_cost > 0,\n         total_tourist >= 60) %>%\n  arrange(desc(cost_per_pax_night))\n\ntop8 <- touristdata_clean_country_sorted$country[1:8]\n\ntouristdata_clean_country_sorted\n\n# A tibble: 24 × 13\n   country  code  region total…¹ total…² total…³ total…⁴ total…⁵ cost_…⁶ cost_…⁷\n   <chr>    <chr> <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 AUSTRAL… AUS   Ocean…     185     126     311  2.72e9    1970  9.58e6 2134147\n 2 SOUTH A… ZAF   Africa     177     258     435  2.57e9    1707  5.78e6 2138016\n 3 UNITED … USA   Ameri…     696     632    1328  8.74e9    7602  7.08e6 1571607\n 4 CANADA   CAN   Ameri…     119      88     207  1.42e9    1746  7.45e6 1240173\n 5 DENMARK  DNK   Europe      40      34      74  5.97e8     839  1.09e7  914157\n 6 SWITZER… CHE   Europe      74      63     137  7.08e8     849  5.39e6  956006\n 7 SWEDEN   SWE   Europe      35      32      67  2.96e8     401  4.93e6  802780\n 8 SPAIN    ESP   Europe     230     178     408  1.61e9    1816  4.21e6 1235937\n 9 ITALY    ITA   Europe     467     464     931  3.64e9    3888  4.06e6 1049569\n10 FRANCE   FRA   Europe     374     355     729  3.32e9    3581  4.74e6 1169800\n# … with 14 more rows, 3 more variables: cost_per_pax_night <dbl>, trips <int>,\n#   avg_night_spent <dbl>, and abbreviated variable names ¹​total_female,\n#   ²​total_male, ³​total_tourist, ⁴​total_cost, ⁵​total_night_spent,\n#   ⁶​cost_per_pax, ⁷​cost_per_night\n\n\n\n4.3.1 For Numerical Variables\n\nplot_ANOVA_country <- function(metric = \"cost_per_pax_night\", selected_countries, testtype = \"np\", pair = \"ns\", compare = T, conf = 0.95, nooutliers = T) {\n  \nmetric_text = case_when(metric == \"total_female\" ~ \"Number of Female Visitors\",\n                        metric == \"total_male\" ~ \"Number of Male Visitors\",\n                        metric == \"total_tourist\" ~ \"Number of Visitors\",\n                        metric == \"total_cost\" ~ \"Total Spending (TZS)\",\n                        metric == \"cost_per_pax\" ~ \"Individual Spending (TZS)\",\n                        metric == \"cost_per_night\" ~ \"Spending per Night (TZS)\",\n                        metric == \"cost_per_pax_night\" ~ \"Individual Spending per Night (TZS)\",\n                        metric == \"prop_night_spent_mainland\" ~ \"Proportion of Night spent in Mainland Tanzania\",\n                        TRUE ~ metric)\n\nparatext <- case_when(testtype == \"p\" ~ \"Mean (Parametric)\",\n                      testtype == \"np\" ~ \"Median (Non-Parametric)\",\n                      testtype == \"r\" ~ \"Mean (Robust t-test)\",\n                      testtype == \"bayes\" ~ \"Mean (Bayesian)\",\n                      )\n\ntouristdata_ANOVA <- touristdata_clean %>%\n  filter(country %in% selected_countries) %>%\n  mutate(country = fct_reorder(country, !!sym(metric), median, .desc = TRUE)) %>%\n  drop_na()\n\nif(nooutliers == T){\n  touristdata_ANOVA <- touristdata_ANOVA %>%\n      treat_outliers() \n}\n\ntouristdata_ANOVA %>% \n  ggbetweenstats(x = country, y = !!sym(metric),\n                 xlab = \"Country\", ylab = metric_text,\n                 type = testtype, pairwise.comparisons = compare, pairwise.display = pair, \n                 mean.ci = T, p.adjust.method = \"fdr\",  conf.level = conf,\n                 title = paste0(\"Comparison of \",paratext,\" \",metric_text, \" across Countries\"),\n                 package = \"ggthemes\", palette = \"Tableau_10\")\n\n}\n\n\nplot_ANOVA_country(metric = \"cost_per_pax_night\", selected_countries = top8, testtype = \"np\", pair = \"ns\", compare = F, conf = 0.95, nooutliers = T)\n\n\n\n\nMajority of big spender indeed comes from Australia, followed by US, Canada, New Zealand, Denmark, and South Africa. However, it is noted that there is no statistically significant difference among many of them\n\nplot_ANOVA_country(metric = \"prop_night_spent_mainland\", selected_countries = top8, testtype = \"np\", pair = \"ns\", conf = 0.95)\n\n\n\n\n\n\n4.3.2 For Categorical Variables\n\nplot_barstats_country <- function(metric = \"purpose\", selected_countries, testtype = \"np\",conf = 0.95) {\n  \nmetric_text = case_when(metric == \"age_group\" ~ \"Age Group\",\n                        metric == \"travel_with\" ~ \"Travelling Companion\",\n                        metric == \"purpose\" ~ \"Purpose\",\n                        metric == \"main_activity\" ~ \"Main Activity\",\n                        metric == \"info_source\" ~ \"Source of Information\",\n                        metric == \"tour_arrangement\" ~ \"Tour Arrangement\",\n                        metric == \"package_transport_int\" ~ \"Include International Transportation?\",\n                        metric == \"package_accomodation\" ~ \"Include accomodation service?\",\n                        metric == \"package_food\" ~ \"Include food service?\",\n                        metric == \"package_transport_tz\" ~ \"Include domestic transport service?\",\n                        metric == \"package_sightseeing\" ~ \"Include sightseeing service?\",\n                        metric == \"package_guided_tour\" ~ \"Include guided tour?\",\n                        metric == \"package_insurance\" ~ \"Insurance Included?\",\n                        metric == \"payment_mode\" ~ \"Mode of Payment\",\n                        metric == \"first_trip_tz\" ~ \"First trip to Tanzania?\",\n                        metric == \"most_impressing\" ~ \"Most impressive about Tanzania?\",\n                        TRUE ~ metric)\n\n\ntouristdata_barstats <- touristdata_clean %>%\n  filter(country %in% selected_countries) %>%\n  drop_na()\n\ntouristdata_barstats %>% \n  ggbarstats(x = !!sym(metric), y = country,\n             xlab = \"Country\", legend.title = metric_text,\n             type = testtype, conf.level = conf,\n             palette = \"Set2\")\n\n}\n\n\nplot_barstats_country(metric = \"travel_with\", selected_countries = top8, testtype = \"np\", conf = 0.95)\n\n\n\n\n\nplot_barstats_country(metric = \"purpose\", selected_countries = top8, testtype = \"np\", conf = 0.95)\n\n\n\n\n\nplot_barstats_country(metric = \"package_insurance\", selected_countries = top8, testtype = \"np\", conf = 0.95)\n\n\n\n\n\nplot_barstats_country(metric = \"first_trip_tz\", selected_countries = top8, testtype = \"np\", conf = 0.95)"
  },
  {
    "objectID": "EDA/CDA.html#exploring-spending-vs-other-variables",
    "href": "EDA/CDA.html#exploring-spending-vs-other-variables",
    "title": "Confirmatory Data Analysis",
    "section": "5. Exploring Spending vs Other Variables",
    "text": "5. Exploring Spending vs Other Variables\n\n5.1 For Numerical Variables\n\nplot_scatter <- function(xaxis = \"prop_night_spent_mainland\", yaxis = \"cost_per_pax_night\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), max_xaxis, testtype = \"np\", conf = 0.95, nooutliers = T) {\n  \nxaxis_text = case_when(xaxis == \"total_female\" ~ \"Number of Female Visitors\",\n                       xaxis == \"total_male\" ~ \"Number of Male Visitors\",\n                       xaxis == \"total_tourist\" ~ \"Number of Visitors\",\n                       xaxis == \"prop_night_spent_mainland\" ~ \"Proportion of Night spent in Mainland Tanzania\",\n                       xaxis == \"total_night_spent\" ~ \"Total Night Spent\",\n                       TRUE ~ xaxis)\n\nyaxis_text = case_when(yaxis == \"total_cost\" ~ \"Total Spending (TZS)\",\n                       yaxis == \"cost_per_pax\" ~ \"Individual Spending (TZS)\",\n                       yaxis == \"cost_per_night\" ~ \"Spending per Night (TZS)\",\n                       yaxis == \"cost_per_pax_night\" ~ \"Individual Spending per Night (TZS)\",\n                       TRUE ~ yaxis)\n\nif(nooutliers == T){\n  touristdata_clean <- touristdata_clean %>%\n      treat_outliers() \n}\n\ntouristdata_clean %>%\n  filter(region %in% regionlist,\n         !!sym(xaxis) <= max_xaxis) %>%\n  ggscatterstats(x = !!sym(xaxis), y = !!sym(yaxis),\n                 type = testtype, conf.level = conf) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n  labs(x = xaxis_text, y = yaxis_text)\n  \n}\n\n\nplot_scatter(xaxis = \"total_tourist\", yaxis = \"total_cost\", regionlist = c(\"Europe\",\"Americas\",\"Oceania\"), max_xaxis = 100, testtype = \"np\", conf = 0.95, nooutliers = T)\n\n\n\n\n\n\n5.2 For Categorical Variables\n\nplot_ANOVA <- function(xaxis = \"age_group\", yaxis = \"total_cost\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), testtype = \"np\", pair = \"ns\",conf = 0.95, nooutliers = T) {\n  \nxaxis_text = case_when(xaxis == \"age_group\" ~ \"Age Group\",\n                        xaxis == \"travel_with\" ~ \"Travelling Companion\",\n                        xaxis == \"purpose\" ~ \"Purpose\",\n                        xaxis == \"main_activity\" ~ \"Main Activity\",\n                        xaxis == \"info_source\" ~ \"Source of Information\",\n                        xaxis == \"tour_arrangement\" ~ \"Tour Arrangement\",\n                        xaxis == \"package_transport_int\" ~ \"Include International Transportation?\",\n                        xaxis == \"package_accomodation\" ~ \"Include accomodation service?\",\n                        xaxis == \"package_food\" ~ \"Include food service?\",\n                        xaxis == \"package_transport_tz\" ~ \"Include domestic transport service?\",\n                        xaxis == \"package_sightseeing\" ~ \"Include sightseeing service?\",\n                        xaxis == \"package_guided_tour\" ~ \"Include guided tour?\",\n                        xaxis == \"package_insurance\" ~ \"Insurance Included?\",\n                        xaxis == \"payment_mode\" ~ \"Mode of Payment\",\n                        xaxis == \"first_trip_tz\" ~ \"First trip to Tanzania?\",\n                        xaxis == \"most_impressing\" ~ \"Most impressive about Tanzania?\",\n                        TRUE ~ xaxis)\n\nyaxis_text = case_when(yaxis == \"total_cost\" ~ \"Total Spending (TZS)\",\n                       yaxis == \"cost_per_pax\" ~ \"Individual Spending (TZS)\",\n                       yaxis == \"cost_per_night\" ~ \"Spending per Night (TZS)\",\n                       yaxis == \"cost_per_pax_night\" ~ \"Individual Spending per Night (TZS)\",\n                       TRUE ~ yaxis)\n\n\ntouristdata_ANOVA <- touristdata_clean %>%\n  filter(region %in% regionlist) %>%\n  drop_na()\n\nif(nooutliers == T){\n  touristdata_ANOVA <- touristdata_ANOVA %>%\n      treat_outliers() \n}\n\ntouristdata_ANOVA %>% \n  ggbetweenstats(x = !!sym(xaxis), y = !!sym(yaxis),\n                 xlab = xaxis_text, ylab = yaxis_text,\n                 type = testtype, pairwise.comparisons = T, pairwise.display = pair, \n                 mean.ci = T, p.adjust.method = \"fdr\",  conf.level = conf,\n                 package = \"ggthemes\", palette = \"Tableau_10\")\n\n}\n\n\nplot_ANOVA(xaxis = \"travel_with\", yaxis = \"total_cost\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), testtype = \"np\", pair = \"ns\",conf = 0.95, nooutliers = T)\n\n\n\n\n\nplot_ANOVA(xaxis = \"age_group\", yaxis = \"total_cost\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), testtype = \"np\", pair = \"ns\",conf = 0.95)\n\n\n\n\n\nplot_ANOVA(xaxis = \"purpose\", yaxis = \"total_cost\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), testtype = \"np\", pair = \"ns\",conf = 0.95)"
  },
  {
    "objectID": "EDA/CDA.html#exploring-other-variables",
    "href": "EDA/CDA.html#exploring-other-variables",
    "title": "Confirmatory Data Analysis",
    "section": "6. Exploring Other Variables",
    "text": "6. Exploring Other Variables\n\nplot_barstats <- function(xaxis = \"age_group\", yaxis = \"purpose\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), testtype = \"np\",conf = 0.95) {\n  \nxaxis_text = case_when(xaxis == \"age_group\" ~ \"Age Group\",\n                        xaxis == \"travel_with\" ~ \"Travelling Companion\",\n                        xaxis == \"purpose\" ~ \"Purpose\",\n                        xaxis == \"main_activity\" ~ \"Main Activity\",\n                        xaxis == \"info_source\" ~ \"Source of Information\",\n                        xaxis == \"tour_arrangement\" ~ \"Tour Arrangement\",\n                        xaxis == \"package_transport_int\" ~ \"Include International Transportation?\",\n                        xaxis == \"package_accomodation\" ~ \"Include accomodation service?\",\n                        xaxis == \"package_food\" ~ \"Include food service?\",\n                        xaxis == \"package_transport_tz\" ~ \"Include domestic transport service?\",\n                        xaxis == \"package_sightseeing\" ~ \"Include sightseeing service?\",\n                        xaxis == \"package_guided_tour\" ~ \"Include guided tour?\",\n                        xaxis == \"package_insurance\" ~ \"Insurance Included?\",\n                        xaxis == \"payment_mode\" ~ \"Mode of Payment\",\n                        xaxis == \"first_trip_tz\" ~ \"First trip to Tanzania?\",\n                        xaxis == \"most_impressing\" ~ \"Most impressive about Tanzania?\",\n                        TRUE ~ xaxis)\n\nyaxis_text = case_when(yaxis == \"age_group\" ~ \"Age Group\",\n                        yaxis == \"travel_with\" ~ \"Travelling Companion\",\n                        yaxis == \"purpose\" ~ \"Purpose\",\n                        yaxis == \"main_activity\" ~ \"Main Activity\",\n                        yaxis == \"info_source\" ~ \"Source of Information\",\n                        yaxis == \"tour_arrangement\" ~ \"Tour Arrangement\",\n                        yaxis == \"package_transport_int\" ~ \"Include International Transportation?\",\n                        yaxis == \"package_accomodation\" ~ \"Include accomodation service?\",\n                        yaxis == \"package_food\" ~ \"Include food service?\",\n                        yaxis == \"package_transport_tz\" ~ \"Include domestic transport service?\",\n                        yaxis == \"package_sightseeing\" ~ \"Include sightseeing service?\",\n                        yaxis == \"package_guided_tour\" ~ \"Include guided tour?\",\n                        yaxis == \"package_insurance\" ~ \"Insurance Included?\",\n                        yaxis == \"payment_mode\" ~ \"Mode of Payment\",\n                        yaxis == \"first_trip_tz\" ~ \"First trip to Tanzania?\",\n                        yaxis == \"most_impressing\" ~ \"Most impressive about Tanzania?\",\n                        TRUE ~ yaxis)\n\n\ntouristdata_barstats <- touristdata_clean %>%\n  filter(region %in% regionlist) %>%\n  drop_na()\n\ntouristdata_barstats %>% \n  ggbarstats(x = !!sym(yaxis), y = !!sym(xaxis),\n             xlab = xaxis_text, legend.title = yaxis_text,\n             type = testtype, conf.level = conf,\n             palette = \"Set2\")\n\n}\n\n\nplot_barstats(xaxis = \"age_group\", yaxis = \"purpose\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), testtype = \"np\",conf = 0.95)\n\n\n\n\n\nplot_barstats(xaxis = \"main_activity\", yaxis = \"tour_arrangement\", regionlist = c(\"Asia\", \"Africa\", \"Europe\", \"Oceania\", \"Americas\"), testtype = \"np\",conf = 0.95)"
  },
  {
    "objectID": "EDA/EDA.html",
    "href": "EDA/EDA.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "pacman::p_load(\"ggstatsplot\", \"plotly\", \"DT\", \"scales\",\"tidyverse\")"
  },
  {
    "objectID": "EDA/EDA.html#loading-the-data",
    "href": "EDA/EDA.html#loading-the-data",
    "title": "Exploratory Data Analysis",
    "section": "2. Loading the data",
    "text": "2. Loading the data\n\ntouristdata_clean <- read_csv(\"data/touristdata_clean.csv\")\ntouristdata_clean <- touristdata_clean %>%\n  filter(total_cost > 0,\n         total_tourist > 0,\n         total_night_spent > 0) %>%\n  mutate(cost_per_pax = round(total_cost/total_tourist,0),\n         cost_per_night = round(total_cost/total_night_spent,0),\n         cost_per_pax_night = round(total_cost/total_tourist/total_night_spent,0))"
  },
  {
    "objectID": "EDA/EDA.html#correlation",
    "href": "EDA/EDA.html#correlation",
    "title": "Exploratory Data Analysis",
    "section": "3. Correlation",
    "text": "3. Correlation\n\noptions(scipen = 999)\nplotcorrelation_costppvtn <- function (a) {\nggscatterstats(data = touristdata_clean,\n                 x = cost_per_pax, y = total_night_spent,\n                 type = \"nonparametic\") + facet_wrap(vars(!!sym(a)))\n}\n\nplotcorrelation_costppvtn (\"tour_arrangement\")\n\n\n\n\n\nplotcorrelation_costppvtn (\"age_group\")\n\n\n\n\n\nplotcorrelation_costppvtn (\"travel_with\")\n\n\n\n\n\nplotcorrelation_costppvtn (\"main_activity\")\n\n\n\n\n\nplotcorrelation_costppvtn (\"purpose\")\n\n\n\n\n\nplotcorrelation_costppvtn (\"info_source\")"
  },
  {
    "objectID": "EDA/EDA.html#country-comparision",
    "href": "EDA/EDA.html#country-comparision",
    "title": "Exploratory Data Analysis",
    "section": "4. Country comparision",
    "text": "4. Country comparision\n\noptions(scipen = 999)\n\np1 <- ggplot(data = touristdata_clean %>% filter(country == \"GERMANY\") %>% group_by(tour_arrangement),\n                 aes(y = total_cost, x = age_group)) + \n  geom_boxplot(aes(fill = tour_arrangement)) + \n  scale_fill_brewer(palette=\"YlGnBu\") + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + \n  scale_y_continuous(labels = comma)\n\np1 %>%\n  ggplotly() %>%\n  layout(boxmode = \"group\")"
  },
  {
    "objectID": "minutes.html",
    "href": "minutes.html",
    "title": "Data Preparation",
    "section": "",
    "text": "Minutes of Team Progress\n\n#1 Meeting Minutes\n\n\n#2 Meeting Minutes\n\n\n#3 Meeting Minutes\n\n\n#4 Meeting Minutes\n\n\n#5 Meeting Minutes"
  }
]
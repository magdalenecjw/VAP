[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics of Tanzania Tourist Spending",
    "section": "",
    "text": "Habari Tanzania"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "DataPrep/DataPrep.html",
    "href": "DataPrep/DataPrep.html",
    "title": "Data Preparation",
    "section": "",
    "text": "pacman::p_load(\"ExPanDaR\", \"countrycode\", \"kableExtra\", \"tidyverse\")\n\n\n\n\n\ntouristdata <- read_csv(\"data/Train.csv\")\nstr(touristdata)\n\nspc_tbl_ [4,809 × 23] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ID                   : chr [1:4809] \"tour_0\" \"tour_10\" \"tour_1000\" \"tour_1002\" ...\n $ country              : chr [1:4809] \"SWIZERLAND\" \"UNITED KINGDOM\" \"UNITED KINGDOM\" \"UNITED KINGDOM\" ...\n $ age_group            : chr [1:4809] \"45-64\" \"25-44\" \"25-44\" \"25-44\" ...\n $ travel_with          : chr [1:4809] \"Friends/Relatives\" NA \"Alone\" \"Spouse\" ...\n $ total_female         : num [1:4809] 1 1 0 1 1 0 0 1 0 1 ...\n $ total_male           : num [1:4809] 1 0 1 1 0 1 1 1 1 0 ...\n $ purpose              : chr [1:4809] \"Leisure and Holidays\" \"Leisure and Holidays\" \"Visiting Friends and Relatives\" \"Leisure and Holidays\" ...\n $ main_activity        : chr [1:4809] \"Wildlife tourism\" \"Cultural tourism\" \"Cultural tourism\" \"Wildlife tourism\" ...\n $ info_source          : chr [1:4809] \"Friends, relatives\" \"others\" \"Friends, relatives\" \"Travel, agent, tour operator\" ...\n $ tour_arrangement     : chr [1:4809] \"Independent\" \"Independent\" \"Independent\" \"Package Tour\" ...\n $ package_transport_int: chr [1:4809] \"No\" \"No\" \"No\" \"No\" ...\n $ package_accomodation : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_food         : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_transport_tz : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_sightseeing  : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_guided_tour  : chr [1:4809] \"No\" \"No\" \"No\" \"Yes\" ...\n $ package_insurance    : chr [1:4809] \"No\" \"No\" \"No\" \"No\" ...\n $ night_mainland       : num [1:4809] 13 14 1 11 7 9 9 10 4 5 ...\n $ night_zanzibar       : num [1:4809] 0 7 31 0 4 3 0 3 0 0 ...\n $ payment_mode         : chr [1:4809] \"Cash\" \"Cash\" \"Cash\" \"Cash\" ...\n $ first_trip_tz        : chr [1:4809] \"No\" \"Yes\" \"No\" \"Yes\" ...\n $ most_impressing      : chr [1:4809] \"Friendly People\" \"Wonderful Country, Landscape, Nature\" \"Excellent Experience\" \"Friendly People\" ...\n $ total_cost           : num [1:4809] 674603 3214907 3315000 7790250 1657500 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = col_character(),\n  ..   country = col_character(),\n  ..   age_group = col_character(),\n  ..   travel_with = col_character(),\n  ..   total_female = col_double(),\n  ..   total_male = col_double(),\n  ..   purpose = col_character(),\n  ..   main_activity = col_character(),\n  ..   info_source = col_character(),\n  ..   tour_arrangement = col_character(),\n  ..   package_transport_int = col_character(),\n  ..   package_accomodation = col_character(),\n  ..   package_food = col_character(),\n  ..   package_transport_tz = col_character(),\n  ..   package_sightseeing = col_character(),\n  ..   package_guided_tour = col_character(),\n  ..   package_insurance = col_character(),\n  ..   night_mainland = col_double(),\n  ..   night_zanzibar = col_double(),\n  ..   payment_mode = col_character(),\n  ..   first_trip_tz = col_character(),\n  ..   most_impressing = col_character(),\n  ..   total_cost = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\n\n\n\n\n\nunique(touristdata$country)\n\n  [1] \"SWIZERLAND\"               \"UNITED KINGDOM\"          \n  [3] \"CHINA\"                    \"SOUTH AFRICA\"            \n  [5] \"UNITED STATES OF AMERICA\" \"NIGERIA\"                 \n  [7] \"INDIA\"                    \"BRAZIL\"                  \n  [9] \"CANADA\"                   \"MALT\"                    \n [11] \"MOZAMBIQUE\"               \"RWANDA\"                  \n [13] \"AUSTRIA\"                  \"MYANMAR\"                 \n [15] \"GERMANY\"                  \"KENYA\"                   \n [17] \"ALGERIA\"                  \"IRELAND\"                 \n [19] \"DENMARK\"                  \"SPAIN\"                   \n [21] \"FRANCE\"                   \"ITALY\"                   \n [23] \"EGYPT\"                    \"QATAR\"                   \n [25] \"MALAWI\"                   \"JAPAN\"                   \n [27] \"SWEDEN\"                   \"NETHERLANDS\"             \n [29] \"UAE\"                      \"UGANDA\"                  \n [31] \"AUSTRALIA\"                \"YEMEN\"                   \n [33] \"NEW ZEALAND\"              \"BELGIUM\"                 \n [35] \"NORWAY\"                   \"ZIMBABWE\"                \n [37] \"ZAMBIA\"                   \"CONGO\"                   \n [39] \"BURGARIA\"                 \"PAKISTAN\"                \n [41] \"GREECE\"                   \"MAURITIUS\"               \n [43] \"DRC\"                      \"OMAN\"                    \n [45] \"PORTUGAL\"                 \"KOREA\"                   \n [47] \"SWAZILAND\"                \"TUNISIA\"                 \n [49] \"KUWAIT\"                   \"DOMINICA\"                \n [51] \"ISRAEL\"                   \"FINLAND\"                 \n [53] \"CZECH REPUBLIC\"           \"UKRAIN\"                  \n [55] \"ETHIOPIA\"                 \"BURUNDI\"                 \n [57] \"SCOTLAND\"                 \"RUSSIA\"                  \n [59] \"GHANA\"                    \"NIGER\"                   \n [61] \"MALAYSIA\"                 \"COLOMBIA\"                \n [63] \"LUXEMBOURG\"               \"NEPAL\"                   \n [65] \"POLAND\"                   \"SINGAPORE\"               \n [67] \"LITHUANIA\"                \"HUNGARY\"                 \n [69] \"INDONESIA\"                \"TURKEY\"                  \n [71] \"TRINIDAD TOBACCO\"         \"IRAQ\"                    \n [73] \"SLOVENIA\"                 \"UNITED ARAB EMIRATES\"    \n [75] \"COMORO\"                   \"SRI LANKA\"               \n [77] \"IRAN\"                     \"MONTENEGRO\"              \n [79] \"ANGOLA\"                   \"LEBANON\"                 \n [81] \"SLOVAKIA\"                 \"ROMANIA\"                 \n [83] \"MEXICO\"                   \"LATVIA\"                  \n [85] \"CROATIA\"                  \"CAPE VERDE\"              \n [87] \"SUDAN\"                    \"COSTARICA\"               \n [89] \"CHILE\"                    \"NAMIBIA\"                 \n [91] \"TAIWAN\"                   \"SERBIA\"                  \n [93] \"LESOTHO\"                  \"GEORGIA\"                 \n [95] \"PHILIPINES\"               \"IVORY COAST\"             \n [97] \"MADAGASCAR\"               \"DJIBOUT\"                 \n [99] \"CYPRUS\"                   \"ARGENTINA\"               \n[101] \"URUGUAY\"                  \"MORROCO\"                 \n[103] \"THAILAND\"                 \"BERMUDA\"                 \n[105] \"ESTONIA\"                 \n\n\n\n\n\n\nmissing.values <- touristdata %>%\n    gather(key = \"key\", value = \"val\") %>%\n    mutate(is.missing = is.na(val)) %>%\n    group_by(key, is.missing) %>%\n    summarise(num.missing = n()) %>%\n    filter(is.missing==T) %>%\n    select(-is.missing) %>%\n    arrange(desc(num.missing)) \nmissing.values %>% kable()\n\n\n\n \n  \n    key \n    num.missing \n  \n \n\n  \n    travel_with \n    1114 \n  \n  \n    most_impressing \n    313 \n  \n  \n    total_male \n    5 \n  \n  \n    total_female \n    3 \n  \n\n\n\n\n\nVisualising missing values\n\nmissing_values <- function(origin, vari = \"country\"){\nprepare_missing_values_graph(origin, ts_id = vari)\n}\n\n\nmissing_values(touristdata, \"country\")\n\n\n\n\n\nmissing_values(touristdata, \"age_group\")\n\n\n\n\n\n\n\n\nconvertbinary <- function(x){\n    as.factor(ifelse(x==\"Yes\", 1,0))\n}\n\n\ntouristdata_min_na <- touristdata %>%\n  mutate(total_tourist = total_male + total_female,\n         .after = total_male) %>%\n  mutate(total_night_spent = night_mainland + night_zanzibar,\n         prop_night_spent_mainland = round(night_mainland/total_night_spent,2),\n         .after = night_zanzibar) %>%\n  mutate(travel_with = case_when(total_tourist == 1 ~ \"Alone\",\n                                 TRUE ~ travel_with)) %>%\n  mutate(most_impressing = case_when(is.na(most_impressing) ~ \"No comments\",\n                                     TRUE ~ most_impressing)) %>%\n  mutate(across(package_transport_int:package_insurance, convertbinary)) %>%\n  mutate(across(first_trip_tz, convertbinary))\n\n\nmissing.values.clean <- touristdata_min_na %>%\n    gather(key = \"key\", value = \"val\") %>%\n    mutate(is.missing = is.na(val)) %>%\n    group_by(key, is.missing) %>%\n    summarise(num.missing = n()) %>%\n    filter(is.missing==T) %>%\n    select(-is.missing) %>%\n    arrange(desc(num.missing)) \nmissing.values.clean %>% kable()\n\n\n\n \n  \n    key \n    num.missing \n  \n \n\n  \n    travel_with \n    29 \n  \n  \n    total_tourist \n    8 \n  \n  \n    total_male \n    5 \n  \n  \n    total_female \n    3 \n  \n\n\n\n\n\n\nmissing_values(touristdata_min_na, \"country\")\n\n\n\n\n\ntouristdata_min_na %>%\n  filter(country == \"CHILE\")\n\n# A tibble: 2 × 26\n  ID     country age_g…¹ trave…² total…³ total…⁴ total…⁵ purpose main_…⁶ info_…⁷\n  <chr>  <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>   <chr>  \n1 tour_… CHILE   25-44   Friend…       1       1       2 Leisur… Wildli… Friend…\n2 tour_… CHILE   25-44   Alone         0       1       1 Leisur… Wildli… Travel…\n# … with 16 more variables: tour_arrangement <chr>,\n#   package_transport_int <fct>, package_accomodation <fct>,\n#   package_food <fct>, package_transport_tz <fct>, package_sightseeing <fct>,\n#   package_guided_tour <fct>, package_insurance <fct>, night_mainland <dbl>,\n#   night_zanzibar <dbl>, total_night_spent <dbl>,\n#   prop_night_spent_mainland <dbl>, payment_mode <chr>, first_trip_tz <fct>,\n#   most_impressing <chr>, total_cost <dbl>, and abbreviated variable names …\n\n\n\ntouristdata_no_na <- touristdata_min_na %>% drop_na()\ntouristdata_no_na\n\n# A tibble: 4,762 × 26\n   ID    country age_g…¹ trave…² total…³ total…⁴ total…⁵ purpose main_…⁶ info_…⁷\n   <chr> <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>   <chr>  \n 1 tour… SWIZER… 45-64   Friend…       1       1       2 Leisur… Wildli… Friend…\n 2 tour… UNITED… 25-44   Alone         1       0       1 Leisur… Cultur… others \n 3 tour… UNITED… 25-44   Alone         0       1       1 Visiti… Cultur… Friend…\n 4 tour… UNITED… 25-44   Spouse        1       1       2 Leisur… Wildli… Travel…\n 5 tour… CHINA   1-24    Alone         1       0       1 Leisur… Wildli… Travel…\n 6 tour… UNITED… 25-44   Alone         0       1       1 Leisur… Wildli… Travel…\n 7 tour… SOUTH … 45-64   Alone         0       1       1 Busine… Mounta… Friend…\n 8 tour… UNITED… 45-64   Friend…       1       1       2 Leisur… Wildli… Travel…\n 9 tour… NIGERIA 25-44   Alone         0       1       1 Leisur… Cultur… Travel…\n10 tour… INDIA   25-44   Alone         1       0       1 Busine… Wildli… Travel…\n# … with 4,752 more rows, 16 more variables: tour_arrangement <chr>,\n#   package_transport_int <fct>, package_accomodation <fct>,\n#   package_food <fct>, package_transport_tz <fct>, package_sightseeing <fct>,\n#   package_guided_tour <fct>, package_insurance <fct>, night_mainland <dbl>,\n#   night_zanzibar <dbl>, total_night_spent <dbl>,\n#   prop_night_spent_mainland <dbl>, payment_mode <chr>, first_trip_tz <fct>,\n#   most_impressing <chr>, total_cost <dbl>, and abbreviated variable names …\n\n\n\n\n\n\nunique(touristdata_no_na$country) \n\n  [1] \"SWIZERLAND\"               \"UNITED KINGDOM\"          \n  [3] \"CHINA\"                    \"SOUTH AFRICA\"            \n  [5] \"UNITED STATES OF AMERICA\" \"NIGERIA\"                 \n  [7] \"INDIA\"                    \"BRAZIL\"                  \n  [9] \"CANADA\"                   \"MALT\"                    \n [11] \"MOZAMBIQUE\"               \"RWANDA\"                  \n [13] \"AUSTRIA\"                  \"MYANMAR\"                 \n [15] \"GERMANY\"                  \"KENYA\"                   \n [17] \"ALGERIA\"                  \"IRELAND\"                 \n [19] \"DENMARK\"                  \"SPAIN\"                   \n [21] \"FRANCE\"                   \"ITALY\"                   \n [23] \"EGYPT\"                    \"QATAR\"                   \n [25] \"MALAWI\"                   \"JAPAN\"                   \n [27] \"SWEDEN\"                   \"NETHERLANDS\"             \n [29] \"UAE\"                      \"UGANDA\"                  \n [31] \"AUSTRALIA\"                \"YEMEN\"                   \n [33] \"NEW ZEALAND\"              \"BELGIUM\"                 \n [35] \"NORWAY\"                   \"ZIMBABWE\"                \n [37] \"ZAMBIA\"                   \"CONGO\"                   \n [39] \"BURGARIA\"                 \"PAKISTAN\"                \n [41] \"GREECE\"                   \"MAURITIUS\"               \n [43] \"DRC\"                      \"OMAN\"                    \n [45] \"PORTUGAL\"                 \"KOREA\"                   \n [47] \"SWAZILAND\"                \"TUNISIA\"                 \n [49] \"KUWAIT\"                   \"DOMINICA\"                \n [51] \"ISRAEL\"                   \"FINLAND\"                 \n [53] \"CZECH REPUBLIC\"           \"UKRAIN\"                  \n [55] \"ETHIOPIA\"                 \"BURUNDI\"                 \n [57] \"SCOTLAND\"                 \"RUSSIA\"                  \n [59] \"GHANA\"                    \"NIGER\"                   \n [61] \"MALAYSIA\"                 \"COLOMBIA\"                \n [63] \"LUXEMBOURG\"               \"NEPAL\"                   \n [65] \"POLAND\"                   \"SINGAPORE\"               \n [67] \"LITHUANIA\"                \"HUNGARY\"                 \n [69] \"INDONESIA\"                \"TURKEY\"                  \n [71] \"TRINIDAD TOBACCO\"         \"IRAQ\"                    \n [73] \"SLOVENIA\"                 \"UNITED ARAB EMIRATES\"    \n [75] \"COMORO\"                   \"SRI LANKA\"               \n [77] \"IRAN\"                     \"MONTENEGRO\"              \n [79] \"ANGOLA\"                   \"LEBANON\"                 \n [81] \"SLOVAKIA\"                 \"ROMANIA\"                 \n [83] \"MEXICO\"                   \"LATVIA\"                  \n [85] \"CROATIA\"                  \"CAPE VERDE\"              \n [87] \"SUDAN\"                    \"COSTARICA\"               \n [89] \"NAMIBIA\"                  \"TAIWAN\"                  \n [91] \"SERBIA\"                   \"LESOTHO\"                 \n [93] \"GEORGIA\"                  \"PHILIPINES\"              \n [95] \"IVORY COAST\"              \"MADAGASCAR\"              \n [97] \"DJIBOUT\"                  \"CYPRUS\"                  \n [99] \"ARGENTINA\"                \"URUGUAY\"                 \n[101] \"MORROCO\"                  \"THAILAND\"                \n[103] \"CHILE\"                    \"BERMUDA\"                 \n[105] \"ESTONIA\"                 \n\n\n\ntouristdata_clean <- touristdata_no_na %>% \n  mutate(country = case_when(country == \"BURGARIA\" ~ \"BULGARIA\",\n                             country == \"DJIBOUT\" ~ \"DJIBOUTI\",\n                             country == \"MALT\" ~ \"MALTA\",\n                             country == \"MORROCO\" ~ \"MOROCCO\",\n                             country == \"PHILIPINES\" ~ \"PHILIPPINES\",\n                             country == \"SCOTLAND\" ~ \"UNITED KINGDOM\",\n                             country == \"SWIZERLAND\" ~ \"SWITZERLAND\",\n                             TRUE ~ country)) %>%\n  mutate(region = countrycode(sourcevar = country,\n                              origin = \"country.name\",\n                              destination = \"continent\"),\n         code = countrycode(sourcevar = country,\n                            origin = \"country.name\",\n                            destination = \"iso3c\"),\n         .after = country)\n\ntouristdata_clean\n\n# A tibble: 4,762 × 28\n   ID       country region code  age_g…¹ trave…² total…³ total…⁴ total…⁵ purpose\n   <chr>    <chr>   <chr>  <chr> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 tour_0   SWITZE… Europe CHE   45-64   Friend…       1       1       2 Leisur…\n 2 tour_10  UNITED… Europe GBR   25-44   Alone         1       0       1 Leisur…\n 3 tour_10… UNITED… Europe GBR   25-44   Alone         0       1       1 Visiti…\n 4 tour_10… UNITED… Europe GBR   25-44   Spouse        1       1       2 Leisur…\n 5 tour_10… CHINA   Asia   CHN   1-24    Alone         1       0       1 Leisur…\n 6 tour_10… UNITED… Europe GBR   25-44   Alone         0       1       1 Leisur…\n 7 tour_10… SOUTH … Africa ZAF   45-64   Alone         0       1       1 Busine…\n 8 tour_10… UNITED… Ameri… USA   45-64   Friend…       1       1       2 Leisur…\n 9 tour_101 NIGERIA Africa NGA   25-44   Alone         0       1       1 Leisur…\n10 tour_10… INDIA   Asia   IND   25-44   Alone         1       0       1 Busine…\n# … with 4,752 more rows, 18 more variables: main_activity <chr>,\n#   info_source <chr>, tour_arrangement <chr>, package_transport_int <fct>,\n#   package_accomodation <fct>, package_food <fct>, package_transport_tz <fct>,\n#   package_sightseeing <fct>, package_guided_tour <fct>,\n#   package_insurance <fct>, night_mainland <dbl>, night_zanzibar <dbl>,\n#   total_night_spent <dbl>, prop_night_spent_mainland <dbl>,\n#   payment_mode <chr>, first_trip_tz <fct>, most_impressing <chr>, …\n\n\n\n#write_csv(touristdata_clean,'C:/michaeldjo/VAP/DataPrep/data/touristdata_clean.csv')"
  },
  {
    "objectID": "Analysis/Regression.html",
    "href": "Analysis/Regression.html",
    "title": "Decision Tree",
    "section": "",
    "text": "Load Packages and Data\n\npacman::p_load(tidyverse, rpart, rpart.plot, sparkline, visNetwork)\n\n\ndf <- read_csv(\"data/touristdata_clean.csv\")\n\ndf_analysis <- df %>% \n  select(!ID) %>% \n  select(!code) %>% \n  select(!country)\n\n\nanova.model <- rpart(total_cost ~ ., data = df_analysis, method = \"anova\", \n                     control = rpart.control(minsplit = 5, cp = 0.001, maxdepth = 10))\n\nprintcp(anova.model)\n\n\nRegression tree:\nrpart(formula = total_cost ~ ., data = df_analysis, method = \"anova\", \n    control = rpart.control(minsplit = 5, cp = 0.001, maxdepth = 10))\n\nVariables actually used in tree construction:\n [1] age_group                 info_source              \n [3] main_activity             most_impressing          \n [5] night_mainland            night_zanzibar           \n [7] package_accomodation      package_food             \n [9] package_guided_tour       package_insurance        \n[11] package_transport_int     payment_mode             \n[13] prop_night_spent_mainland purpose                  \n[15] region                    total_female             \n[17] total_male                total_night_spent        \n[19] total_tourist             tour_arrangement         \n[21] travel_with              \n\nRoot node error: 7.0099e+17/4762 = 1.472e+14\n\nn= 4762 \n\n          CP nsplit rel error  xerror     xstd\n1  0.2221822      0   1.00000 1.00115 0.052764\n2  0.0653800      1   0.77782 0.77912 0.043921\n3  0.0312447      2   0.71244 0.71423 0.040432\n4  0.0098871      4   0.64995 0.65232 0.037730\n5  0.0089989      6   0.63017 0.66585 0.038809\n6  0.0089654      7   0.62118 0.66221 0.038663\n7  0.0066781      8   0.61221 0.65584 0.038684\n8  0.0056746      9   0.60553 0.64578 0.037624\n9  0.0055600     10   0.59986 0.65129 0.040013\n10 0.0053787     11   0.59430 0.65640 0.040344\n11 0.0053253     12   0.58892 0.65966 0.040635\n12 0.0051713     13   0.58359 0.66979 0.041613\n13 0.0048403     14   0.57842 0.67347 0.041837\n14 0.0046831     15   0.57358 0.67198 0.041835\n15 0.0045494     16   0.56890 0.67269 0.041813\n16 0.0045415     17   0.56435 0.67268 0.041809\n17 0.0038489     19   0.55527 0.67430 0.042086\n18 0.0037768     20   0.55142 0.68610 0.042934\n19 0.0036528     21   0.54764 0.68779 0.043403\n20 0.0036431     24   0.53668 0.68770 0.043388\n21 0.0035646     28   0.52211 0.68763 0.043399\n22 0.0032389     29   0.51855 0.68874 0.043464\n23 0.0028148     30   0.51531 0.69415 0.043686\n24 0.0027982     31   0.51249 0.69431 0.043763\n25 0.0027464     35   0.50130 0.69505 0.043774\n26 0.0026194     37   0.49581 0.69916 0.043866\n27 0.0025449     38   0.49319 0.69904 0.043868\n28 0.0021832     39   0.49064 0.70354 0.044204\n29 0.0021695     40   0.48846 0.71658 0.044873\n30 0.0020550     41   0.48629 0.71422 0.044857\n31 0.0019419     42   0.48423 0.72197 0.045221\n32 0.0019108     43   0.48229 0.72301 0.045217\n33 0.0018682     44   0.48038 0.72153 0.045162\n34 0.0017684     45   0.47851 0.72706 0.045466\n35 0.0016929     47   0.47498 0.72779 0.045472\n36 0.0016091     51   0.46820 0.72725 0.045411\n37 0.0015919     54   0.46338 0.72813 0.045420\n38 0.0015800     55   0.46179 0.72878 0.045395\n39 0.0015561     56   0.46021 0.72722 0.045305\n40 0.0014456     58   0.45709 0.73071 0.045359\n41 0.0014314     63   0.44986 0.73106 0.045251\n42 0.0013349     64   0.44843 0.73538 0.045348\n43 0.0013221     66   0.44576 0.73540 0.045348\n44 0.0012398     67   0.44444 0.73429 0.045336\n45 0.0011227     69   0.44196 0.73779 0.045308\n46 0.0010561     70   0.44084 0.73589 0.045170\n47 0.0010518     74   0.43661 0.73656 0.045162\n48 0.0010445     75   0.43556 0.73617 0.045160\n49 0.0010335     76   0.43452 0.73656 0.045164\n50 0.0010176     77   0.43348 0.73671 0.045169\n51 0.0010152     78   0.43247 0.73706 0.045164\n52 0.0010000     79   0.43145 0.73759 0.045167\n\n\n\nbestcp <- anova.model$cptable[which.min(anova.model$cptable[,\"xerror\"]),\"CP\"]\npruned.model <- prune(anova.model, cp = bestcp)\n\nvisTree(pruned.model, edgesFontSize = 14, nodesFontSize = 16, width = \"100%\")"
  }
]